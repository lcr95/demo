package demo.titanic;

/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2017-10-31T23:10:07.201+08:00
  3.14.0.7
  
  Standalone prediction code with sample test data for GBMModel named GBM

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://192.168.0.119:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://192.168.0.119:54321/3/Models.java/GBM > GBM.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m GBM.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="GBM", algorithm="gbm")
public class GBM extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Binomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 24; }
  public int nclasses() { return 2; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_GBM.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 2;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* Sex */ GBM_ColInfo_0.VALUES,
    /* Fare */ null,
    /* Embarked_C */ GBM_ColInfo_2.VALUES,
    /* Embarked_Q */ GBM_ColInfo_3.VALUES,
    /* Embarked_S */ GBM_ColInfo_4.VALUES,
    /* Cabin_A */ GBM_ColInfo_5.VALUES,
    /* Cabin_B */ GBM_ColInfo_6.VALUES,
    /* Cabin_C */ GBM_ColInfo_7.VALUES,
    /* Cabin_D */ GBM_ColInfo_8.VALUES,
    /* Cabin_E */ GBM_ColInfo_9.VALUES,
    /* Cabin_F */ GBM_ColInfo_10.VALUES,
    /* Cabin_G */ GBM_ColInfo_11.VALUES,
    /* Cabin_T */ GBM_ColInfo_12.VALUES,
    /* Cabin_U */ GBM_ColInfo_13.VALUES,
    /* Pclass_1 */ GBM_ColInfo_14.VALUES,
    /* Pclass_2 */ GBM_ColInfo_15.VALUES,
    /* Pclass_3 */ GBM_ColInfo_16.VALUES,
    /* Single */ GBM_ColInfo_17.VALUES,
    /* SmallFamily */ GBM_ColInfo_18.VALUES,
    /* MediumFamily */ GBM_ColInfo_19.VALUES,
    /* LargeFamily */ GBM_ColInfo_20.VALUES,
    /* Child */ GBM_ColInfo_21.VALUES,
    /* Adult */ GBM_ColInfo_22.VALUES,
    /* Eldery */ GBM_ColInfo_23.VALUES,
    /* Survived */ GBM_ColInfo_24.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.6207865168539326,0.3792134831460674};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.6207865168539326,0.3792134831460674};

  public GBM() { super(NAMES,DOMAINS,"Survived"); }
  public String getUUID() { return Long.toString(3417451957013725798L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    GBM_Forest_0.score0(data,preds);
    GBM_Forest_1.score0(data,preds);
    GBM_Forest_2.score0(data,preds);
    GBM_Forest_3.score0(data,preds);
    GBM_Forest_4.score0(data,preds);
    GBM_Forest_5.score0(data,preds);
    GBM_Forest_6.score0(data,preds);
    GBM_Forest_7.score0(data,preds);
    GBM_Forest_8.score0(data,preds);
    GBM_Forest_9.score0(data,preds);
    GBM_Forest_10.score0(data,preds);
    GBM_Forest_11.score0(data,preds);
    GBM_Forest_12.score0(data,preds);
    GBM_Forest_13.score0(data,preds);
    GBM_Forest_14.score0(data,preds);
    GBM_Forest_15.score0(data,preds);
    GBM_Forest_16.score0(data,preds);
    GBM_Forest_17.score0(data,preds);
    GBM_Forest_18.score0(data,preds);
    GBM_Forest_19.score0(data,preds);
    GBM_Forest_20.score0(data,preds);
    GBM_Forest_21.score0(data,preds);
    GBM_Forest_22.score0(data,preds);
    GBM_Forest_23.score0(data,preds);
    GBM_Forest_24.score0(data,preds);
    GBM_Forest_25.score0(data,preds);
    GBM_Forest_26.score0(data,preds);
    GBM_Forest_27.score0(data,preds);
    GBM_Forest_28.score0(data,preds);
    GBM_Forest_29.score0(data,preds);
    GBM_Forest_30.score0(data,preds);
    GBM_Forest_31.score0(data,preds);
    GBM_Forest_32.score0(data,preds);
    GBM_Forest_33.score0(data,preds);
    GBM_Forest_34.score0(data,preds);
    GBM_Forest_35.score0(data,preds);
    GBM_Forest_36.score0(data,preds);
    GBM_Forest_37.score0(data,preds);
    GBM_Forest_38.score0(data,preds);
    GBM_Forest_39.score0(data,preds);
    GBM_Forest_40.score0(data,preds);
    GBM_Forest_41.score0(data,preds);
    GBM_Forest_42.score0(data,preds);
    GBM_Forest_43.score0(data,preds);
    GBM_Forest_44.score0(data,preds);
    GBM_Forest_45.score0(data,preds);
    GBM_Forest_46.score0(data,preds);
    GBM_Forest_47.score0(data,preds);
    GBM_Forest_48.score0(data,preds);
    GBM_Forest_49.score0(data,preds);
    preds[2] = preds[1] + -0.49288792307932344;
    preds[2] = 1./(1. + Math.min(1e19, Math.exp(-(preds[2]))));
    preds[1] = 1.0-preds[2];
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.48756946254178074);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_GBM implements java.io.Serializable {
  public static final String[] VALUES = new String[24];
  static {
    NamesHolder_GBM_0.fill(VALUES);
  }
  static final class NamesHolder_GBM_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Sex";
      sa[1] = "Fare";
      sa[2] = "Embarked_C";
      sa[3] = "Embarked_Q";
      sa[4] = "Embarked_S";
      sa[5] = "Cabin_A";
      sa[6] = "Cabin_B";
      sa[7] = "Cabin_C";
      sa[8] = "Cabin_D";
      sa[9] = "Cabin_E";
      sa[10] = "Cabin_F";
      sa[11] = "Cabin_G";
      sa[12] = "Cabin_T";
      sa[13] = "Cabin_U";
      sa[14] = "Pclass_1";
      sa[15] = "Pclass_2";
      sa[16] = "Pclass_3";
      sa[17] = "Single";
      sa[18] = "SmallFamily";
      sa[19] = "MediumFamily";
      sa[20] = "LargeFamily";
      sa[21] = "Child";
      sa[22] = "Adult";
      sa[23] = "Eldery";
    }
  }
}
// The class representing column Sex
class GBM_ColInfo_0 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_0_0.fill(VALUES);
  }
  static final class GBM_ColInfo_0_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Embarked_C
class GBM_ColInfo_2 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_2_0.fill(VALUES);
  }
  static final class GBM_ColInfo_2_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Embarked_Q
class GBM_ColInfo_3 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_3_0.fill(VALUES);
  }
  static final class GBM_ColInfo_3_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Embarked_S
class GBM_ColInfo_4 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_4_0.fill(VALUES);
  }
  static final class GBM_ColInfo_4_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_A
class GBM_ColInfo_5 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_5_0.fill(VALUES);
  }
  static final class GBM_ColInfo_5_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_B
class GBM_ColInfo_6 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_6_0.fill(VALUES);
  }
  static final class GBM_ColInfo_6_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_C
class GBM_ColInfo_7 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_7_0.fill(VALUES);
  }
  static final class GBM_ColInfo_7_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_D
class GBM_ColInfo_8 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_8_0.fill(VALUES);
  }
  static final class GBM_ColInfo_8_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_E
class GBM_ColInfo_9 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_9_0.fill(VALUES);
  }
  static final class GBM_ColInfo_9_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_F
class GBM_ColInfo_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_10_0.fill(VALUES);
  }
  static final class GBM_ColInfo_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_G
class GBM_ColInfo_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_11_0.fill(VALUES);
  }
  static final class GBM_ColInfo_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_T
class GBM_ColInfo_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_12_0.fill(VALUES);
  }
  static final class GBM_ColInfo_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_U
class GBM_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_13_0.fill(VALUES);
  }
  static final class GBM_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Pclass_1
class GBM_ColInfo_14 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_14_0.fill(VALUES);
  }
  static final class GBM_ColInfo_14_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Pclass_2
class GBM_ColInfo_15 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_15_0.fill(VALUES);
  }
  static final class GBM_ColInfo_15_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Pclass_3
class GBM_ColInfo_16 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_16_0.fill(VALUES);
  }
  static final class GBM_ColInfo_16_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Single
class GBM_ColInfo_17 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_17_0.fill(VALUES);
  }
  static final class GBM_ColInfo_17_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column SmallFamily
class GBM_ColInfo_18 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_18_0.fill(VALUES);
  }
  static final class GBM_ColInfo_18_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column MediumFamily
class GBM_ColInfo_19 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_19_0.fill(VALUES);
  }
  static final class GBM_ColInfo_19_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column LargeFamily
class GBM_ColInfo_20 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_20_0.fill(VALUES);
  }
  static final class GBM_ColInfo_20_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Child
class GBM_ColInfo_21 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_21_0.fill(VALUES);
  }
  static final class GBM_ColInfo_21_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Adult
class GBM_ColInfo_22 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_22_0.fill(VALUES);
  }
  static final class GBM_ColInfo_22_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Eldery
class GBM_ColInfo_23 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_23_0.fill(VALUES);
  }
  static final class GBM_ColInfo_23_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Survived
class GBM_ColInfo_24 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GBM_ColInfo_24_0.fill(VALUES);
  }
  static final class GBM_ColInfo_24_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}

class GBM_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_0_class_0.score0(fdata);
  }
}
class GBM_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.11409596f : 
                        -0.15185142f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.12568684f : 
                        0.05130886f)) : 
                 (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                    -0.12246873f : 
                    0.13299918f)) : 
             (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[13])) ? 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                     (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                        -0.14085789f : 
                        -0.054888558f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <56.411247f ? 
                        -0.04780873f : 
                        0.05130886f)) : 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
                     (data[1 /* Fare */] <60.210564f ? 
                        0.034970794f : 
                        -0.07005961f) : 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[17])) ? 
                        0.008829893f : 
                        0.07061748f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                 (data[1 /* Fare */] <7.9639754f ? 
                     (!Double.isNaN(data[4 /* Embarked_S */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[4])) ? 
                        0.13095692f : 
                        0.1625633f) : 
                     (data[1 /* Fare */] <10.867605f ? 
                        -0.043088842f : 
                        0.11865356f)) : 
                -0.105678625f) : 
             (data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.501413f ? 
                     (data[1 /* Fare */] <12.797107f ? 
                        0.22122473f : 
                        0.22508645f) : 
                    0.19290541f) : 
                 (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[19])) ? 
                    0.19290541f : 
                    0.26370367f))));
    return pred;
  } // constant pool size = 154B, number of visited nodes = 23, static init size = 360B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_1_class_0.score0(fdata);
  }
}
class GBM_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.10604921f : 
                        -0.14284886f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.11724623f : 
                        0.045607038f)) : 
                 (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                    -0.11412877f : 
                    0.116211645f)) : 
             (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[13])) ? 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                     (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                        -0.13203502f : 
                        -0.05013248f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <56.411247f ? 
                        -0.043579705f : 
                        0.045607038f)) : 
                 (data[1 /* Fare */] <37.414665f ? 
                     (data[1 /* Fare */] <27.156809f ? 
                        0.09175413f : 
                        0.025534665f) : 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[18])) ? 
                        -0.12162453f : 
                        0.030461071f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                 (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[22])) ? 
                     (data[1 /* Fare */] <8.098862f ? 
                        0.109169506f : 
                        0.033503674f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <12.954764f ? 
                        0.18021433f : 
                        0.12113697f)) : 
                -0.09797153f) : 
             (data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.501413f ? 
                     (data[1 /* Fare */] <12.797107f ? 
                        0.19047195f : 
                        0.19368926f) : 
                    0.16680573f) : 
                 (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[19])) ? 
                    0.16680573f : 
                    0.22575738f))));
    return pred;
  } // constant pool size = 149B, number of visited nodes = 23, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_2_class_0.score0(fdata);
  }
}
class GBM_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.09890131f : 
                        -0.1353788f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.10985864f : 
                        0.04064011f)) : 
                 (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                    -0.10679597f : 
                    0.10268021f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[23])) ? 
                -0.12662987f : 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[13])) ? 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[17])) ? 
                        -0.08940495f : 
                        0.013207208f) : 
                     (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
                        -0.008445931f : 
                        0.056448985f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <15.315272f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <12.906289f ? 
                        0.08335745f : 
                        -0.09107232f) : 
                     (data[1 /* Fare */] <17.603165f ? 
                        0.19714816f : 
                        0.08998498f)) : 
                -0.09106856f) : 
             (data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.501413f ? 
                     (data[1 /* Fare */] <12.797107f ? 
                        0.16839188f : 
                        0.17127918f) : 
                    0.1472825f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <149.49449f ? 
                     (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[14])) ? 
                        0.20034327f : 
                        0.20554207f) : 
                    0.14903474f))));
    return pred;
  } // constant pool size = 136B, number of visited nodes = 21, static init size = 300B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_3_class_0.score0(fdata);
  }
}
class GBM_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.09245007f : 
                        -0.12905104f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.10326967f : 
                        0.036285665f)) : 
                 (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                    -0.10023108f : 
                    0.09145247f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[23])) ? 
                -0.11807128f : 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[13])) ? 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[17])) ? 
                        -0.08317351f : 
                        0.011846821f) : 
                     (data[1 /* Fare */] <45.013298f ? 
                        0.06668399f : 
                        0.004026021f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                 (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[22])) ? 
                     (data[1 /* Fare */] <8.098862f ? 
                        0.087456375f : 
                        0.021867465f) : 
                     (!Double.isNaN(data[4 /* Embarked_S */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
                        0.09512631f : 
                        0.15292239f)) : 
                -0.08480112f) : 
             (data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.501413f ? 
                     (data[1 /* Fare */] <12.797107f ? 
                        0.15157323f : 
                        0.15429091f) : 
                    0.13192935f) : 
                 (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[19])) ? 
                    0.1290122f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <139.9962f ? 
                        0.18205614f : 
                        0.18558794f)))));
    return pred;
  } // constant pool size = 141B, number of visited nodes = 21, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_4_class_0.score0(fdata);
  }
}
class GBM_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.08654987f : 
                        -0.12359136f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.097296916f : 
                        0.032448646f)) : 
                 (data[1 /* Fare */] <10.772548f ? 
                    -0.08416587f : 
                    0.096886925f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[23])) ? 
                -0.11059107f : 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[13])) ? 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                        -0.07744968f : 
                        0.010631001f) : 
                     (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[7])) ? 
                        -0.010526504f : 
                        0.047190033f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <15.585045f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.928474f ? 
                        0.06860224f : 
                        -0.072093785f) : 
                     (data[1 /* Fare */] <18.595848f ? 
                        0.09210814f : 
                        0.14225458f)) : 
                -0.07904733f) : 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <114.073296f ? 
                     (data[1 /* Fare */] <14.545832f ? 
                        0.12279591f : 
                        0.16013433f) : 
                    0.09588808f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <124.07973f ? 
                     (data[1 /* Fare */] <63.85042f ? 
                        0.17234032f : 
                        0.16845644f) : 
                    0.17310487f))));
    return pred;
  } // constant pool size = 131B, number of visited nodes = 21, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_5_class_0.score0(fdata);
  }
}
class GBM_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.08109443f : 
                        -0.118800595f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.09180707f : 
                        0.029053712f)) : 
                 (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                    -0.09243143f : 
                    0.07789118f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[23])) ? 
                -0.103927985f : 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[13])) ? 
                     (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[19])) ? 
                        -0.107167795f : 
                        -0.013915662f) : 
                     (data[1 /* Fare */] <45.013298f ? 
                        0.056619417f : 
                        0.0010000217f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <15.315272f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.9544916f ? 
                        0.08995673f : 
                        -0.014448219f) : 
                     (data[1 /* Fare */] <17.603165f ? 
                        0.16477676f : 
                        0.060068898f)) : 
                -0.07371804f) : 
             (data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.501413f ? 
                     (data[1 /* Fare */] <12.797107f ? 
                        0.1279638f : 
                        0.12994961f) : 
                    0.10538495f) : 
                 (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[19])) ? 
                    0.104658104f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <139.9962f ? 
                        0.15808582f : 
                        0.16225223f)))));
    return pred;
  } // constant pool size = 131B, number of visited nodes = 21, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_6_class_0.score0(fdata);
  }
}
class GBM_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (data[1 /* Fare */] <7.723713f ? 
                        -0.10200513f : 
                        -0.07738651f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.08670148f : 
                        0.026040047f)) : 
                 (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[15])) ? 
                    -0.14666547f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <64.00988f ? 
                        0.014370165f : 
                        -0.063913554f))) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                    -0.10388f : 
                    -0.08146458f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                    0.03482051f : 
                    0.25089517f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                 (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[22])) ? 
                     (data[1 /* Fare */] <8.098862f ? 
                        0.06306805f : 
                        0.010641223f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <12.954764f ? 
                        0.12620845f : 
                        0.0729788f)) : 
                -0.06874762f) : 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <114.073296f ? 
                     (data[1 /* Fare */] <14.545832f ? 
                        0.10276328f : 
                        0.14016344f) : 
                    0.07628777f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <124.07973f ? 
                     (data[1 /* Fare */] <63.85042f ? 
                        0.15290241f : 
                        0.14938542f) : 
                    0.15321074f))));
    return pred;
  } // constant pool size = 136B, number of visited nodes = 21, static init size = 300B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_7_class_0.score0(fdata);
  }
}
class GBM_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <28.018003f ? 
                     (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[13])) ? 
                        -0.11340729f : 
                        -0.071003065f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <65.85481f ? 
                        0.010642992f : 
                        -0.0679562f)) : 
                0.044180915f) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <24.01543f ? 
                    -0.07641828f : 
                    -0.09901598f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                    0.031378552f : 
                    0.21939002f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <15.315272f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.9544916f ? 
                        0.074500844f : 
                        -0.017281141f) : 
                     (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                        0.048435576f : 
                        0.15037204f)) : 
                -0.06408757f) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <111.72025f ? 
                     (data[1 /* Fare */] <26.315664f ? 
                        0.1077883f : 
                        0.14415054f) : 
                    0.055496912f) : 
                0.15300468f)));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 17, static init size = 240B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_8_class_0.score0(fdata);
  }
}
class GBM_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <28.018003f ? 
                     (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[13])) ? 
                        -0.107191086f : 
                        -0.06643032f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <65.85481f ? 
                        0.009554876f : 
                        -0.062625095f)) : 
                0.0394361f) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                    -0.09441106f : 
                    -0.07180589f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                    0.028288653f : 
                    0.19729194f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                 (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[22])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <14.84317f ? 
                        0.011978564f : 
                        0.07006176f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <12.954764f ? 
                        0.11319376f : 
                        0.05996132f)) : 
                -0.059702016f) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                 (data[1 /* Fare */] <26.741697f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.980368f ? 
                        0.108004466f : 
                        0.08608013f) : 
                     (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[14])) ? 
                        0.13770911f : 
                        0.14184661f)) : 
                0.08214226f)));
    return pred;
  } // constant pool size = 124B, number of visited nodes = 18, static init size = 300B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_9_class_0.score0(fdata);
  }
}
class GBM_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <19.410912f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.164775f ? 
                        -0.0643218f : 
                        0.0069982875f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.742613f ? 
                        -0.13033342f : 
                        -0.065126985f)) : 
                 (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                    -0.13713136f : 
                     (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[22])) ? 
                        -0.09588922f : 
                        0.008030366f))) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <24.01543f ? 
                    -0.06727696f : 
                    -0.0901425f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                    0.025510015f : 
                    0.18091823f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <10.786458f ? 
                        -0.012656092f : 
                        0.06403589f) : 
                    -0.07553975f) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[17])) ? 
                        0.022949357f : 
                        0.067692645f) : 
                    0.10651427f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <111.72025f ? 
                     (data[1 /* Fare */] <13.663133f ? 
                        0.08255965f : 
                        0.12399355f) : 
                    0.040932253f) : 
                0.14197269f)));
    return pred;
  } // constant pool size = 132B, number of visited nodes = 20, static init size = 300B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_10_class_0.score0(fdata);
  }
}
class GBM_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <52.033436f ? 
                     (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[7])) ? 
                        -0.061340466f : 
                        0.042298924f) : 
                     (data[1 /* Fare */] <59.225555f ? 
                        0.10937023f : 
                        -0.051757675f)) : 
                0.036499564f) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                    -0.08600933f : 
                    -0.06311313f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                    0.023008106f : 
                    0.16831091f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <10.786458f ? 
                        -0.011390944f : 
                        0.057884347f) : 
                    -0.071066424f) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[17])) ? 
                        0.020613734f : 
                        0.06148344f) : 
                    0.097789675f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                 (data[1 /* Fare */] <26.741697f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.980368f ? 
                        0.09579602f : 
                        0.0717008f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <108.15405f ? 
                        0.12946841f : 
                        0.13304912f)) : 
                0.06767286f)));
    return pred;
  } // constant pool size = 133B, number of visited nodes = 19, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_11_class_0.score0(fdata);
  }
}
class GBM_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <52.033436f ? 
                     (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[7])) ? 
                        -0.0572176f : 
                        0.03775733f) : 
                     (data[1 /* Fare */] <59.225555f ? 
                        0.09704371f : 
                        -0.047558494f)) : 
                0.0326717f) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <24.01543f ? 
                    -0.058985524f : 
                    -0.082116604f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                    0.020753264f : 
                    0.15832482f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (data[1 /* Fare */] <8.005144f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.7796106f ? 
                     (data[1 /* Fare */] <7.747435f ? 
                        0.066303186f : 
                        0.0062635476f) : 
                    0.13161485f) : 
                 (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[18])) ? 
                     (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[22])) ? 
                        -0.07543505f : 
                        0.002708919f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <18.583166f ? 
                        6.620697E-4f : 
                        0.13220568f))) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <111.72025f ? 
                     (data[1 /* Fare */] <13.663133f ? 
                        0.07052085f : 
                        0.1148472f) : 
                    0.027646946f) : 
                0.13408433f)));
    return pred;
  } // constant pool size = 123B, number of visited nodes = 19, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_12_class_0.score0(fdata);
  }
}
class GBM_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <52.033436f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <36.179497f ? 
                        -0.04567814f : 
                        -0.114968345f) : 
                     (data[1 /* Fare */] <59.225555f ? 
                        0.0866968f : 
                        -0.043670494f)) : 
                0.029277593f) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                    -0.0782854f : 
                    -0.055190194f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                    0.018719755f : 
                    0.1502419f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (data[1 /* Fare */] <8.005144f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.7796106f ? 
                     (data[1 /* Fare */] <7.747435f ? 
                        0.06048674f : 
                        0.005643502f) : 
                    0.121633105f) : 
                 (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[18])) ? 
                     (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[22])) ? 
                        -0.06977522f : 
                        0.0024361229f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.698251f ? 
                        -0.017849175f : 
                        0.08467428f))) : 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
                 (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[19])) ? 
                    0.028706998f : 
                     (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[14])) ? 
                        0.07360552f : 
                        0.12503278f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <112.072014f ? 
                     (data[1 /* Fare */] <59.094692f ? 
                        0.12475201f : 
                        0.12217876f) : 
                    0.1281057f))));
    return pred;
  } // constant pool size = 146B, number of visited nodes = 21, static init size = 360B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_13_class_0.score0(fdata);
  }
}
class GBM_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <116.574905f ? 
             (data[1 /* Fare */] <7.7413025f ? 
                 (data[1 /* Fare */] <7.0155554f ? 
                    -0.051680814f : 
                     (data[1 /* Fare */] <7.1339993f ? 
                        -0.13289295f : 
                        -0.08009431f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <64.63056f ? 
                        -0.026377933f : 
                        -0.09491726f) : 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[18])) ? 
                        -0.063601136f : 
                        0.13094136f))) : 
            0.05157087f) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <16.010288f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <10.808867f ? 
                        -0.012624918f : 
                        0.1140842f) : 
                     (data[1 /* Fare */] <22.702753f ? 
                        0.011884154f : 
                        -0.07588512f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[17])) ? 
                        0.014259581f : 
                        0.048411414f) : 
                    0.08535769f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                 (data[1 /* Fare */] <26.741697f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.980368f ? 
                        0.0811265f : 
                        0.053313006f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <108.15405f ? 
                        0.12075887f : 
                        0.12453281f)) : 
                0.04812227f)));
    return pred;
  } // constant pool size = 113B, number of visited nodes = 19, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_14_class_0.score0(fdata);
  }
}
class GBM_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (data[1 /* Fare */] <7.723713f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.240981f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.127841f ? 
                        -0.080649585f : 
                        -0.030307027f) : 
                    -0.11953651f) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                        -0.047640547f : 
                        0.015882595f) : 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                        -0.04789998f : 
                        0.1095037f))) : 
             (data[1 /* Fare */] <37.414665f ? 
                 (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <29.390062f ? 
                        -0.078623004f : 
                        0.005934709f) : 
                     (data[1 /* Fare */] <27.12224f ? 
                        0.09200768f : 
                        0.022446487f)) : 
                 (data[1 /* Fare */] <52.255745f ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                        -0.15330169f : 
                        -0.044953857f) : 
                     (data[1 /* Fare */] <59.444393f ? 
                        0.071184516f : 
                        -0.028905666f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (data[1 /* Fare */] <8.005144f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.7796106f ? 
                     (data[1 /* Fare */] <7.747435f ? 
                        0.053040106f : 
                        0.0023755594f) : 
                    0.11238267f) : 
                 (data[1 /* Fare */] <10.890059f ? 
                    -0.058082398f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <24.638483f ? 
                        0.039745197f : 
                        -0.057739772f))) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <111.72025f ? 
                     (data[1 /* Fare */] <13.663133f ? 
                        0.05497183f : 
                        0.10436735f) : 
                    0.006317276f) : 
                0.12576088f)));
    return pred;
  } // constant pool size = 133B, number of visited nodes = 24, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_15_class_0.score0(fdata);
  }
}
class GBM_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <116.574905f ? 
             (data[1 /* Fare */] <7.7413025f ? 
                 (data[1 /* Fare */] <7.0155554f ? 
                    -0.042626135f : 
                     (data[1 /* Fare */] <7.1339993f ? 
                        -0.12783235f : 
                        -0.07238659f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <64.63056f ? 
                        -0.022320531f : 
                        -0.087639175f) : 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[18])) ? 
                        -0.057248563f : 
                        0.11918154f))) : 
            0.048993528f) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <14.009002f ? 
                 (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[22])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.997641f ? 
                        0.043609783f : 
                        -0.027747175f) : 
                    0.09319273f) : 
                 (data[1 /* Fare */] <15.7446575f ? 
                    -0.07792058f : 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                        -0.06936372f : 
                        0.0697691f))) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                 (data[1 /* Fare */] <26.741697f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.980368f ? 
                        0.07254509f : 
                        0.04181557f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <108.15405f ? 
                        0.11658621f : 
                        0.12132395f)) : 
                0.036757886f)));
    return pred;
  } // constant pool size = 104B, number of visited nodes = 18, static init size = 180B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_16_class_0.score0(fdata);
  }
}
class GBM_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <20.782887f ? 
                 (data[1 /* Fare */] <7.7935824f ? 
                     (data[1 /* Fare */] <7.1847086f ? 
                        -0.050892677f : 
                        -0.06675051f) : 
                     (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                        -0.028963465f : 
                        0.06277806f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <25.959242f ? 
                    -0.12334115f : 
                    -0.04602615f)) : 
             (data[1 /* Fare */] <37.414665f ? 
                 (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <29.390062f ? 
                        -0.07468481f : 
                        0.004858819f) : 
                     (data[1 /* Fare */] <27.12224f ? 
                        0.08360965f : 
                        0.022433132f)) : 
                 (data[1 /* Fare */] <52.255745f ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[17])) ? 
                        -0.14497013f : 
                        -0.04005957f) : 
                     (data[1 /* Fare */] <59.444393f ? 
                        0.066264234f : 
                        -0.024381695f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <16.010288f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <10.808867f ? 
                        -0.013521939f : 
                        0.09983955f) : 
                     (data[1 /* Fare */] <22.702753f ? 
                        0.001199887f : 
                        -0.06675559f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[17])) ? 
                        0.012451774f : 
                        0.037593387f) : 
                    0.074033454f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[19])) ? 
                    -0.0050667897f : 
                     (!Double.isNaN(data[14 /* Pclass_1 */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[14])) ? 
                        0.05798431f : 
                        0.11566064f)) : 
                0.12192965f)));
    return pred;
  } // constant pool size = 148B, number of visited nodes = 24, static init size = 300B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_17_class_0.score0(fdata);
  }
}
class GBM_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
            -0.09104087f : 
             (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[14])) ? 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[15])) ? 
                        -0.06404438f : 
                        -0.026006537f) : 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                        -0.054886684f : 
                        0.04517745f)) : 
                 (data[1 /* Fare */] <36.023148f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <30.394531f ? 
                        0.016667116f : 
                        0.09568313f) : 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[18])) ? 
                        -0.10575594f : 
                        0.025303397f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <14.009002f ? 
                 (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[22])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.997641f ? 
                        0.03850314f : 
                        -0.026139773f) : 
                    0.08260929f) : 
                 (data[1 /* Fare */] <15.7446575f ? 
                    -0.07432691f : 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[18])) ? 
                        -0.06199048f : 
                        0.062903896f))) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                0.036620714f : 
                 (data[1 /* Fare */] <28.018003f ? 
                     (data[1 /* Fare */] <13.510907f ? 
                        0.041589905f : 
                        0.070899114f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <111.25899f ? 
                        0.11342786f : 
                        0.117911324f)))));
    return pred;
  } // constant pool size = 133B, number of visited nodes = 19, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_18_class_0.score0(fdata);
  }
}
class GBM_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <116.574905f ? 
             (data[1 /* Fare */] <7.7413025f ? 
                 (data[1 /* Fare */] <7.0155554f ? 
                    -0.03339292f : 
                     (data[1 /* Fare */] <7.1339993f ? 
                        -0.12463514f : 
                        -0.06386617f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <58.859188f ? 
                        -0.016197987f : 
                        -0.073255464f) : 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[18])) ? 
                        -0.049467027f : 
                        0.10849468f))) : 
            0.049018737f) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <16.010288f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <10.808867f ? 
                        -0.013877962f : 
                        0.091472164f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <29.813496f ? 
                        -0.049775194f : 
                        -0.0016816809f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[17])) ? 
                        0.014032283f : 
                        0.031138746f) : 
                    0.06647645f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                 (data[1 /* Fare */] <13.74834f ? 
                     (data[1 /* Fare */] <12.834744f ? 
                        0.058290496f : 
                        0.023196852f) : 
                     (data[1 /* Fare */] <26.195757f ? 
                        0.054225218f : 
                        0.1131941f)) : 
                0.020037413f)));
    return pred;
  } // constant pool size = 113B, number of visited nodes = 19, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_19_class_0.score0(fdata);
  }
}
class GBM_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <19.360096f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <15.125075f ? 
                     (data[1 /* Fare */] <7.5625377f ? 
                        -0.057331618f : 
                        -0.0242843f) : 
                     (data[1 /* Fare */] <15.869005f ? 
                        0.06570161f : 
                        0.023570757f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <25.948126f ? 
                     (data[1 /* Fare */] <21.368597f ? 
                        -0.07349228f : 
                        -0.12178004f) : 
                    -0.037577685f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
                -0.077950865f : 
                 (Double.isNaN(data[6 /* Cabin_B */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (GenModel.bitSetIsInRange(32, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <64.00988f ? 
                        0.016745875f : 
                        -0.04741735f) : 
                    0.08265504f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <14.009002f ? 
                 (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[22])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.997641f ? 
                        0.034165695f : 
                        -0.024498053f) : 
                    0.073503844f) : 
                 (data[1 /* Fare */] <15.7446575f ? 
                    -0.070947416f : 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                        -0.05689653f : 
                        0.058791786f))) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <111.72025f ? 
                     (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                        0.030033283f : 
                        0.079262815f) : 
                    -0.032302983f) : 
                0.11768646f)));
    return pred;
  } // constant pool size = 117B, number of visited nodes = 20, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_20_class_0.score0(fdata);
  }
}
class GBM_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <116.574905f ? 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <29.143726f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <26.866873f ? 
                        -0.027372085f : 
                        -0.109253265f) : 
                     (data[1 /* Fare */] <37.68831f ? 
                        0.048663262f : 
                        -0.017050821f)) : 
                0.03324801f) : 
            0.043305174f) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.026499419f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <17.621529f ? 
                        0.01736766f : 
                        -0.068063885f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                        0.015409103f : 
                        0.025565641f) : 
                    0.059962966f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                 (data[1 /* Fare */] <26.741697f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.980368f ? 
                        0.05479809f : 
                        0.015325757f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <108.15405f ? 
                        0.11024713f : 
                        0.113887444f)) : 
                0.010811074f)));
    return pred;
  } // constant pool size = 96B, number of visited nodes = 16, static init size = 180B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_21_class_0.score0(fdata);
  }
}
class GBM_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
            -0.082497574f : 
             (Double.isNaN(data[6 /* Cabin_B */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (GenModel.bitSetIsInRange(32, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                 (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                        -0.026207244f : 
                        0.0031579451f) : 
                    0.04251459f) : 
                0.055141423f)) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.024017794f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <17.621529f ? 
                        0.01562537f : 
                        -0.06262161f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[17])) ? 
                        0.013856306f : 
                        0.023216201f) : 
                    0.055392154f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <111.72025f ? 
                     (data[1 /* Fare */] <13.663133f ? 
                        0.0254397f : 
                        0.085668825f) : 
                    -0.038404193f) : 
                0.11557327f)));
    return pred;
  } // constant pool size = 103B, number of visited nodes = 14, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_22_class_0.score0(fdata);
  }
}
class GBM_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
            -0.07838384f : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <19.410912f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.164775f ? 
                        -0.023866063f : 
                        0.043746702f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.742613f ? 
                        -0.09069701f : 
                        -0.037644245f)) : 
                 (data[1 /* Fare */] <37.414665f ? 
                     (data[1 /* Fare */] <26.773344f ? 
                        0.11775509f : 
                        0.0011328112f) : 
                     (data[1 /* Fare */] <52.255745f ? 
                        -0.09012782f : 
                        0.012256076f)))) : 
         (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[4])) ? 
             (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[16])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.021760548f : 
                     (data[1 /* Fare */] <10.890059f ? 
                        -0.05759678f : 
                        0.0090952525f)) : 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[7])) ? 
                    -0.025250452f : 
                     (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[14])) ? 
                        0.03781556f : 
                        0.10994347f))) : 
             (data[1 /* Fare */] <17.010931f ? 
                 (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[17])) ? 
                    -0.040862802f : 
                    0.040544134f) : 
                 (data[1 /* Fare */] <36.359303f ? 
                    0.13211651f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <110.7296f ? 
                        0.108050205f : 
                        0.11233087f)))));
    return pred;
  } // constant pool size = 113B, number of visited nodes = 19, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_23_class_0.score0(fdata);
  }
}
class GBM_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <116.574905f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <59.198193f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <54.110847f ? 
                     (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                        -0.020650148f : 
                        0.07826871f) : 
                    0.08525877f) : 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[13])) ? 
                    -0.12131127f : 
                    -0.022899736f)) : 
            0.03649644f) : 
         (data[1 /* Fare */] <15.0096445f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <12.815677f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <10.49366f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <8.036883f ? 
                        0.024916196f : 
                        -0.05496907f) : 
                    0.08619333f) : 
                -0.057134457f) : 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[4])) ? 
                 (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[19])) ? 
                     (data[1 /* Fare */] <30.55088f ? 
                        -0.063467994f : 
                        -0.004677084f) : 
                     (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[13])) ? 
                        0.01431095f : 
                        0.11520583f)) : 
                 (data[1 /* Fare */] <26.665571f ? 
                    0.08357785f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <110.13901f ? 
                        0.08240105f : 
                        0.111026004f)))));
    return pred;
  } // constant pool size = 96B, number of visited nodes = 16, static init size = 180B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_24_class_0.score0(fdata);
  }
}
class GBM_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
            -0.074161805f : 
             (Double.isNaN(data[6 /* Cabin_B */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (GenModel.bitSetIsInRange(32, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[6])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <64.04115f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <56.03601f ? 
                        -0.012888599f : 
                        0.065637276f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <85.80228f ? 
                        -0.065264225f : 
                        -0.024021558f)) : 
                0.046968695f)) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <14.009002f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <8.678172f ? 
                     (!Double.isNaN(data[4 /* Embarked_S */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[4])) ? 
                        -0.016274208f : 
                        0.016581597f) : 
                    0.05016931f) : 
                 (data[1 /* Fare */] <15.7446575f ? 
                    -0.068266876f : 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                        -0.04496494f : 
                        0.050004963f))) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                 (data[1 /* Fare */] <26.741697f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.980368f ? 
                        0.04551947f : 
                        -1.2957744E-4f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <108.15405f ? 
                        0.107423194f : 
                        0.11043834f)) : 
                -0.0074791857f)));
    return pred;
  } // constant pool size = 96B, number of visited nodes = 16, static init size = 180B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_25_class_0.score0(fdata);
  }
}
class GBM_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[3 /* Embarked_Q */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <10.00643f ? 
                -0.034161273f : 
                -0.115587674f) : 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[15])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <16.010288f ? 
                        -0.034184426f : 
                        -0.082826495f) : 
                     (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[22])) ? 
                        -0.0657233f : 
                        -0.0012377419f)) : 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                     (data[1 /* Fare */] <16.010288f ? 
                        0.0085683605f : 
                        -0.029697187f) : 
                    0.10703199f))) : 
         (data[1 /* Fare */] <11.007072f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <8.038762f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.7820168f ? 
                     (data[1 /* Fare */] <7.7497663f ? 
                        0.023930337f : 
                        -0.025677148f) : 
                    0.09399234f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <9.839139f ? 
                    -0.05767986f : 
                    -0.02486344f)) : 
             (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[13])) ? 
                 (data[1 /* Fare */] <18.84023f ? 
                     (data[1 /* Fare */] <13.902978f ? 
                        0.06404336f : 
                        -0.044493835f) : 
                     (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                        0.011322717f : 
                        0.112824924f)) : 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[14])) ? 
                     (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
                        0.0032474445f : 
                        0.10766361f) : 
                    0.13270181f))));
    return pred;
  } // constant pool size = 132B, number of visited nodes = 20, static init size = 300B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_26_class_0.score0(fdata);
  }
}
class GBM_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[5 /* Cabin_A */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[23])) ? 
                -0.11831208f : 
                 (Double.isNaN(data[6 /* Cabin_B */]) || !GenModel.bitSetIsInRange(32, 0, data[6]) || (GenModel.bitSetIsInRange(32, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[6])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <64.04115f ? 
                        -0.0076345713f : 
                        -0.045499362f) : 
                    0.041622493f)) : 
            0.039254986f) : 
         (data[1 /* Fare */] <15.0096445f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <12.815677f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <10.49366f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <8.036883f ? 
                        0.02054649f : 
                        -0.048565622f) : 
                    0.07496729f) : 
                -0.056609742f) : 
             (data[1 /* Fare */] <16.9523f ? 
                0.07300574f : 
                 (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[4])) ? 
                     (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                        -0.04787439f : 
                        0.042066343f) : 
                     (data[1 /* Fare */] <36.30296f ? 
                        0.11069917f : 
                        0.10699304f)))));
    return pred;
  } // constant pool size = 84B, number of visited nodes = 13, static init size = 180B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_27_class_0.score0(fdata);
  }
}
class GBM_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <19.360096f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <15.125075f ? 
                     (data[1 /* Fare */] <7.5625377f ? 
                        -0.046480384f : 
                        -0.010802783f) : 
                     (data[1 /* Fare */] <15.869005f ? 
                        0.065442756f : 
                        0.023569446f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <25.948126f ? 
                     (data[1 /* Fare */] <21.368597f ? 
                        -0.05153297f : 
                        -0.11678502f) : 
                    -0.021523653f)) : 
             (data[1 /* Fare */] <37.414665f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <29.826181f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <26.78084f ? 
                        0.07047163f : 
                        -0.10930739f) : 
                     (data[1 /* Fare */] <30.83559f ? 
                        0.094829656f : 
                        0.040111322f)) : 
                 (data[1 /* Fare */] <52.255745f ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[17])) ? 
                        -0.13326569f : 
                        -0.025624223f) : 
                     (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[7])) ? 
                        -0.0621101f : 
                        0.032317847f)))) : 
         (data[1 /* Fare */] <11.007072f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <8.038762f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.7820168f ? 
                     (data[1 /* Fare */] <7.7497663f ? 
                        0.019860886f : 
                        -0.025124736f) : 
                    0.08730635f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <9.839139f ? 
                    -0.04871871f : 
                    -0.025849449f)) : 
             (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[19])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <36.464836f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <28.57322f ? 
                        -0.018184911f : 
                        0.062592186f) : 
                    -0.06050202f) : 
                 (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[13])) ? 
                     (data[1 /* Fare */] <18.84023f ? 
                        -0.010173205f : 
                        0.050669797f) : 
                     (data[1 /* Fare */] <26.67339f ? 
                        0.124772206f : 
                        0.10648236f)))));
    return pred;
  } // constant pool size = 131B, number of visited nodes = 26, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_28_class_0.score0(fdata);
  }
}
class GBM_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <18.011574f ? 
                     (data[1 /* Fare */] <12.945819f ? 
                        -0.07356809f : 
                        -2.7002732E-4f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <26.68164f ? 
                        -0.040905103f : 
                        -0.11792453f)) : 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                        -0.021396484f : 
                        0.0043421583f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <80.05144f ? 
                        0.034006167f : 
                        -0.048924144f))) : 
             (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[16])) ? 
                 (data[1 /* Fare */] <16.010288f ? 
                    0.010542936f : 
                     (data[1 /* Fare */] <30.248514f ? 
                        -0.047494646f : 
                        -0.016042395f)) : 
                0.102510616f)) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <152.59805f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <111.863144f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <31.385893f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <23.30224f ? 
                        0.011882577f : 
                        -0.031458847f) : 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[19])) ? 
                        0.06576896f : 
                        0.17661084f)) : 
                -0.084051676f) : 
            0.1118002f));
    return pred;
  } // constant pool size = 100B, number of visited nodes = 17, static init size = 180B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_29_class_0.score0(fdata);
  }
}
class GBM_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.11344309f : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (data[1 /* Fare */] <6.910691f ? 
                -0.088345446f : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <23.315565f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.145283f ? 
                        -0.0068153753f : 
                        0.027475392f) : 
                     (data[1 /* Fare */] <25.769306f ? 
                        -0.08327688f : 
                        -0.029049776f))) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
                -0.05054188f : 
                 (data[1 /* Fare */] <37.414665f ? 
                     (data[1 /* Fare */] <26.773344f ? 
                        0.09944477f : 
                        0.012867225f) : 
                     (data[1 /* Fare */] <52.255745f ? 
                        -0.05142218f : 
                        0.024723757f)))));
    return pred;
  } // constant pool size = 52B, number of visited nodes = 10, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_30_class_0.score0(fdata);
  }
}
class GBM_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[3 /* Embarked_Q */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <10.00643f ? 
                -0.026884437f : 
                -0.11370947f) : 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[15])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <16.010288f ? 
                        -0.026359253f : 
                        -0.07512535f) : 
                     (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[22])) ? 
                        -0.05629472f : 
                        8.930978E-5f)) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[19])) ? 
                        -0.04016513f : 
                        -0.0093979435f) : 
                     (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
                        0.0065925936f : 
                        0.12823744f)))) : 
         (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
             (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[16])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <16.010288f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <10.808867f ? 
                        -0.014758612f : 
                        0.07193654f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <29.813496f ? 
                        -0.046359196f : 
                        0.013886491f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <114.073296f ? 
                     (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[21])) ? 
                        0.03221179f : 
                        0.10988425f) : 
                    -0.050947018f)) : 
             (data[1 /* Fare */] <17.010931f ? 
                 (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[17])) ? 
                    -0.03644655f : 
                    0.03012655f) : 
                 (data[1 /* Fare */] <36.359303f ? 
                    0.10274803f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <110.7296f ? 
                        0.10423333f : 
                        0.10700812f)))));
    return pred;
  } // constant pool size = 146B, number of visited nodes = 21, static init size = 360B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_31_class_0.score0(fdata);
  }
}
class GBM_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.11200916f : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (data[1 /* Fare */] <6.910691f ? 
                -0.08471331f : 
                 (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[4])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <17.648428f ? 
                        -0.0028668905f : 
                        -0.04388897f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.5605345f ? 
                        -1.6821471E-4f : 
                        0.101991385f))) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[7])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <98.20373f ? 
                     (data[1 /* Fare */] <32.70774f ? 
                        -0.0037163657f : 
                        0.077929795f) : 
                    -0.07287603f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <115.30065f ? 
                     (data[1 /* Fare */] <27.641417f ? 
                        0.0714482f : 
                        0.0028887263f) : 
                    0.11491551f))));
    return pred;
  } // constant pool size = 61B, number of visited nodes = 11, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_32_class_0.score0(fdata);
  }
}
class GBM_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[5 /* Cabin_A */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[23])) ? 
                -0.11605744f : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <116.074585f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <58.944126f ? 
                        -0.0047268122f : 
                        -0.045935363f) : 
                    0.033156484f)) : 
            0.037261885f) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <152.59805f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <111.863144f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <31.385893f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <23.30224f ? 
                        0.010295208f : 
                        -0.028894776f) : 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[19])) ? 
                        0.064449616f : 
                        0.1477791f)) : 
                -0.08052705f) : 
            0.11126379f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 10, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_33_class_0.score0(fdata);
  }
}
class GBM_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.11095611f : 
         (data[1 /* Fare */] <11.007072f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <7.911333f ? 
                 (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[22])) ? 
                    -0.11461213f : 
                     (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[0])) ? 
                        -0.03660056f : 
                        0.0074240332f)) : 
                 (data[1 /* Fare */] <8.03346f ? 
                    0.2236633f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <9.721287f ? 
                        -7.2495756E-4f : 
                        -0.05117789f))) : 
             (data[1 /* Fare */] <12.965362f ? 
                0.06526909f : 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <141.7076f ? 
                        0.0030053437f : 
                        -0.06559712f) : 
                     (Double.isNaN(data[8 /* Cabin_D */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (GenModel.bitSetIsInRange(32, 0, data[8]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[8])) ? 
                        0.013159939f : 
                        0.15172586f)))));
    return pred;
  } // constant pool size = 71B, number of visited nodes = 11, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_34_class_0.score0(fdata);
  }
}
class GBM_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <18.011574f ? 
                     (data[1 /* Fare */] <12.945819f ? 
                        -0.066507556f : 
                        0.0033378233f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <26.68164f ? 
                        -0.030682316f : 
                        -0.1149431f)) : 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                        -0.02915132f : 
                        -0.0036469472f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <80.05144f ? 
                        0.028693812f : 
                        -0.05304201f))) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <24.01543f ? 
                    -0.016360605f : 
                    -0.041042317f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                    0.010185269f : 
                    0.12568384f))) : 
         (data[1 /* Fare */] <15.0096445f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <12.815677f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <10.49366f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <8.036883f ? 
                        0.013742997f : 
                        -0.038868897f) : 
                    0.06537854f) : 
                -0.056277633f) : 
             (data[1 /* Fare */] <16.9523f ? 
                0.06354817f : 
                 (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                     (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[16])) ? 
                        -0.043111917f : 
                        0.03502183f) : 
                     (data[1 /* Fare */] <36.30296f ? 
                        0.092745505f : 
                        0.10469944f)))));
    return pred;
  } // constant pool size = 127B, number of visited nodes = 20, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_35_class_0.score0(fdata);
  }
}
class GBM_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.109438375f : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (data[1 /* Fare */] <6.910691f ? 
                -0.07957126f : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <23.315565f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.145283f ? 
                        -0.005524286f : 
                        0.0235933f) : 
                     (data[1 /* Fare */] <25.769306f ? 
                        -0.07768329f : 
                        -0.021427028f))) : 
             (data[1 /* Fare */] <31.715693f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <29.83686f ? 
                     (data[1 /* Fare */] <26.782425f ? 
                        0.058119558f : 
                        -0.09507242f) : 
                     (data[1 /* Fare */] <30.600065f ? 
                        0.11778316f : 
                        0.06740532f)) : 
                 (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                    -0.07299032f : 
                     (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[19])) ? 
                        -0.037216436f : 
                        0.023407303f)))));
    return pred;
  } // constant pool size = 65B, number of visited nodes = 12, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_36_class_0.score0(fdata);
  }
}
class GBM_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <18.011574f ? 
                     (data[1 /* Fare */] <12.945819f ? 
                        -0.06241713f : 
                        0.0035617305f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <26.68164f ? 
                        -0.027395913f : 
                        -0.1138418f)) : 
                 (!Double.isNaN(data[3 /* Embarked_Q */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                    -0.042306397f : 
                     (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[22])) ? 
                        -0.050476726f : 
                        -2.731854E-4f))) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.03304788f : 
                    -0.020017399f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                    0.008597074f : 
                    0.12346876f))) : 
         (data[1 /* Fare */] <18.011574f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <14.096417f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <10.8249655f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <9.710717f ? 
                        0.007973018f : 
                        -0.053688217f) : 
                    0.068401754f) : 
                 (data[1 /* Fare */] <15.621254f ? 
                    -0.07576501f : 
                    0.008717901f)) : 
             (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[19])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <33.459f ? 
                     (data[1 /* Fare */] <26.67907f ? 
                        -0.038797166f : 
                        0.061653886f) : 
                    -0.07582524f) : 
                 (data[1 /* Fare */] <25.735287f ? 
                    0.12293857f : 
                     (!Double.isNaN(data[14 /* Pclass_1 */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[14])) ? 
                        -0.014911862f : 
                        0.10514545f)))));
    return pred;
  } // constant pool size = 131B, number of visited nodes = 21, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_37_class_0.score0(fdata);
  }
}
class GBM_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* Fare */] <237.40254f ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <148.84027f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <116.57217f ? 
                 (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <59.196804f ? 
                        -0.0041453927f : 
                        -0.04185094f) : 
                     (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[16])) ? 
                        -2.554423E-4f : 
                        0.04293303f)) : 
                0.11947108f) : 
            -0.08638918f) : 
        0.05749442f);
    return pred;
  } // constant pool size = 36B, number of visited nodes = 6, static init size = 60B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_38_class_0.score0(fdata);
  }
}
class GBM_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.10826294f : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (data[1 /* Fare */] <6.910691f ? 
                -0.07516181f : 
                 (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[4])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <17.648428f ? 
                        -0.0019558116f : 
                        -0.04191576f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.5605345f ? 
                        9.668126E-4f : 
                        0.089535765f))) : 
             (data[1 /* Fare */] <31.715693f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <29.83686f ? 
                     (data[1 /* Fare */] <26.782425f ? 
                        0.053512856f : 
                        -0.0912808f) : 
                     (data[1 /* Fare */] <30.600065f ? 
                        0.10750388f : 
                        0.055224407f)) : 
                 (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                    -0.069318585f : 
                     (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[19])) ? 
                        -0.03179774f : 
                        0.021208823f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 12, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_39_class_0.score0(fdata);
  }
}
class GBM_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <56.036007f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <35.898067f ? 
                        -0.011389327f : 
                        -0.0542622f) : 
                     (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[7])) ? 
                        -0.0731176f : 
                        0.0416416f)) : 
                0.020836463f) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.029838983f : 
                    -0.015642907f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                    0.009446008f : 
                    0.12212397f))) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <152.59805f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <111.863144f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <31.385893f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <23.30224f ? 
                        0.007279368f : 
                        -0.029700954f) : 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[19])) ? 
                        0.06409297f : 
                        0.13580889f)) : 
                -0.080944955f) : 
            0.11109285f));
    return pred;
  } // constant pool size = 93B, number of visited nodes = 14, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_40_class_0.score0(fdata);
  }
}
class GBM_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.107782185f : 
         (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[15])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <16.010288f ? 
                        -0.018181797f : 
                        -0.06444702f) : 
                     (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[22])) ? 
                        -0.051420867f : 
                        -0.001412985f)) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                     (data[1 /* Fare */] <24.01543f ? 
                        -0.009664485f : 
                        -0.019957023f) : 
                     (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                        0.008514025f : 
                        0.11973969f))) : 
             (data[1 /* Fare */] <18.011574f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <14.096417f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <10.8249655f ? 
                        -0.0047168364f : 
                        0.06267585f) : 
                     (data[1 /* Fare */] <15.621254f ? 
                        -0.06966883f : 
                        0.0077680913f)) : 
                 (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[19])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <33.459f ? 
                        0.0109264925f : 
                        -0.07023219f) : 
                     (data[1 /* Fare */] <25.735287f ? 
                        0.116671786f : 
                        0.057861462f)))));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 16, static init size = 240B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_41_class_0.score0(fdata);
  }
}
class GBM_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* Fare */] <224.64435f ? 
         (data[1 /* Fare */] <7.8976526f ? 
             (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[22])) ? 
                -0.10552212f : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.8359523f ? 
                     (data[1 /* Fare */] <6.856458f ? 
                        -0.06816014f : 
                        -0.0040029385f) : 
                     (data[1 /* Fare */] <7.887384f ? 
                        0.07725531f : 
                        -0.11454635f))) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <134.88982f ? 
                 (data[1 /* Fare */] <9.908825f ? 
                     (data[1 /* Fare */] <8.048989f ? 
                        0.19379628f : 
                        2.135315E-5f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <88.75168f ? 
                        7.542292E-5f : 
                        0.08405266f)) : 
                -0.08356634f)) : 
        0.05341635f);
    return pred;
  } // constant pool size = 47B, number of visited nodes = 10, static init size = 30B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_42_class_0.score0(fdata);
  }
}
class GBM_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <80.55176f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <59.155197f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <55.457996f ? 
                     (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
                        -0.0056766043f : 
                        0.04527757f) : 
                    0.040540803f) : 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[13])) ? 
                    -0.11977229f : 
                    -0.08370805f)) : 
             (data[1 /* Fare */] <142.55565f ? 
                0.18255243f : 
                -0.050800372f)) : 
         (Double.isNaN(data[8 /* Cabin_D */]) || !GenModel.bitSetIsInRange(32, 0, data[8]) || (GenModel.bitSetIsInRange(32, 0, data[8]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[8])) ? 
             (data[1 /* Fare */] <20.01286f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <15.187243f ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                        -0.03975125f : 
                        5.5420713E-4f) : 
                    0.10710345f) : 
                 (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[0])) ? 
                     (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[13])) ? 
                        -0.07659231f : 
                        0.0014236829f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <120.01462f ? 
                        0.10427968f : 
                        0.10483627f))) : 
            0.110063836f));
    return pred;
  } // constant pool size = 93B, number of visited nodes = 14, static init size = 210B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_43_class_0.score0(fdata);
  }
}
class GBM_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* Fare */] <237.40254f ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <135.1618f ? 
             (data[1 /* Fare */] <7.9196367f ? 
                 (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[22])) ? 
                    -0.09419078f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.7958922f ? 
                        -0.00728298f : 
                        -0.044065535f)) : 
                 (data[1 /* Fare */] <9.897455f ? 
                     (data[1 /* Fare */] <8.048279f ? 
                        0.16497909f : 
                        5.5964565E-4f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <88.747505f ? 
                        1.6235239E-5f : 
                        0.06398586f))) : 
            -0.066372074f) : 
        0.047224317f);
    return pred;
  } // constant pool size = 39B, number of visited nodes = 8, static init size = 30B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_44_class_0.score0(fdata);
  }
}
class GBM_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.10667353f : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <14.126265f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <10.815421f ? 
                     (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
                        -0.067242265f : 
                        -0.002322982f) : 
                     (Double.isNaN(data[15 /* Pclass_2 */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                        2.053973E-5f : 
                        0.1360951f)) : 
                 (data[1 /* Fare */] <15.146664f ? 
                    -0.13387185f : 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[2])) ? 
                        -0.014416505f : 
                        0.07032116f))) : 
             (data[1 /* Fare */] <31.715693f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <29.83686f ? 
                     (data[1 /* Fare */] <26.782425f ? 
                        0.04913619f : 
                        -0.08581204f) : 
                     (data[1 /* Fare */] <30.600065f ? 
                        0.10017768f : 
                        0.04720498f)) : 
                 (data[1 /* Fare */] <35.470486f ? 
                    -0.091807455f : 
                     (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                        -0.06680265f : 
                        0.015172735f)))));
    return pred;
  } // constant pool size = 83B, number of visited nodes = 14, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_45_class_0.score0(fdata);
  }
}
class GBM_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <59.037933f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <54.425594f ? 
                     (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.012154115f : 
                        0.067469075f) : 
                    0.059295867f) : 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[7])) ? 
                    -0.071107365f : 
                     (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[13])) ? 
                        -0.0540735f : 
                        0.010186316f))) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.025526777f : 
                    -0.009317369f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                    0.014246329f : 
                    0.11889461f))) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <152.59805f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <111.863144f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <31.385893f ? 
                     (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[19])) ? 
                        -0.037775278f : 
                        0.005102828f) : 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[19])) ? 
                        0.0639939f : 
                        0.12580688f)) : 
                -0.06996188f) : 
            0.11034416f));
    return pred;
  } // constant pool size = 107B, number of visited nodes = 15, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_46_class_0.score0(fdata);
  }
}
class GBM_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <80.55176f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <59.155197f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <54.07155f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <37.596622f ? 
                        -6.0769595E-4f : 
                        -0.043668326f) : 
                    0.031663675f) : 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
                    -0.11113591f : 
                    -0.08051657f)) : 
             (data[1 /* Fare */] <142.55565f ? 
                0.16623314f : 
                -0.04589426f)) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <79.0508f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <52.388103f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <27.258867f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.221515f ? 
                        -0.00969959f : 
                        0.078159586f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <35.07949f ? 
                        -0.061465874f : 
                        0.024321038f)) : 
                0.12702432f) : 
             (!Double.isNaN(data[0 /* Sex */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[0])) ? 
                -0.058157228f : 
                0.10394443f)));
    return pred;
  } // constant pool size = 69B, number of visited nodes = 13, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_47_class_0.score0(fdata);
  }
}
class GBM_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* Fare */] <237.40254f ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <135.1618f ? 
             (data[1 /* Fare */] <7.9196367f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.8577647f ? 
                     (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[22])) ? 
                        -0.085042484f : 
                        -0.0012374705f) : 
                    -0.07515153f) : 
                 (data[1 /* Fare */] <9.897455f ? 
                     (data[1 /* Fare */] <8.048279f ? 
                        0.14306587f : 
                        0.0015713699f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <109.19011f ? 
                        -1.8294157E-4f : 
                        0.067110784f))) : 
            -0.058753397f) : 
        0.04482961f);
    return pred;
  } // constant pool size = 39B, number of visited nodes = 8, static init size = 30B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class GBM_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_48_class_0.score0(fdata);
  }
}
class GBM_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <59.037933f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <54.425594f ? 
                     (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                        -0.010925637f : 
                        0.0619234f) : 
                    0.04966845f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <117.47001f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <77.00797f ? 
                        -0.020822434f : 
                        -0.07693765f) : 
                    0.009103868f)) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.023742178f : 
                    -0.006787291f) : 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[16])) ? 
                    0.01595626f : 
                    0.117566615f))) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <152.59805f ? 
             (data[1 /* Fare */] <15.295784f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <13.593304f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <10.813211f ? 
                        -0.0035389902f : 
                        0.053523373f) : 
                    -0.106026545f) : 
                 (data[1 /* Fare */] <17.424757f ? 
                    0.10577325f : 
                     (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                        -0.027563822f : 
                        0.03438274f))) : 
            0.109610654f));
    return pred;
  } // constant pool size = 96B, number of visited nodes = 16, static init size = 180B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
}


class GBM_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GBM_Tree_49_class_0.score0(fdata);
  }
}
class GBM_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <80.55176f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <59.155197f ? 
                 (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[7])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <31.426199f ? 
                        -3.4914556E-4f : 
                        -0.02786946f) : 
                    0.03084547f) : 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[13])) ? 
                    -0.10298482f : 
                    -0.07662699f)) : 
             (data[1 /* Fare */] <142.55565f ? 
                0.15425245f : 
                -0.045048382f)) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <79.0508f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <52.388103f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <27.258867f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.221515f ? 
                        -0.005643802f : 
                        0.073780276f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <35.07949f ? 
                        -0.055472124f : 
                        0.021288337f)) : 
                0.11513497f) : 
             (!Double.isNaN(data[0 /* Sex */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[0])) ? 
                -0.054216668f : 
                0.10343539f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 13, static init size = 120B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
}


