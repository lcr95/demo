package demo.titanic;
/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2017-11-05T16:27:48.728+08:00
  3.14.0.7
  
  Standalone prediction code with sample test data for GBMModel named GradientBoostingMachine

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://192.168.0.119:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://192.168.0.119:54321/3/Models.java/GradientBoostingMachine > GradientBoostingMachine.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m GradientBoostingMachine.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="GradientBoostingMachine", algorithm="gbm")
public class GradientBoostingMachine extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Binomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 24; }
  public int nclasses() { return 2; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_GradientBoostingMachine.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 2;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* Sex */ GradientBoostingMachine_ColInfo_0.VALUES,
    /* Fare */ null,
    /* Embarked_C */ GradientBoostingMachine_ColInfo_2.VALUES,
    /* Embarked_Q */ GradientBoostingMachine_ColInfo_3.VALUES,
    /* Embarked_S */ GradientBoostingMachine_ColInfo_4.VALUES,
    /* Cabin_A */ GradientBoostingMachine_ColInfo_5.VALUES,
    /* Cabin_B */ GradientBoostingMachine_ColInfo_6.VALUES,
    /* Cabin_C */ GradientBoostingMachine_ColInfo_7.VALUES,
    /* Cabin_D */ GradientBoostingMachine_ColInfo_8.VALUES,
    /* Cabin_E */ GradientBoostingMachine_ColInfo_9.VALUES,
    /* Cabin_F */ GradientBoostingMachine_ColInfo_10.VALUES,
    /* Cabin_G */ GradientBoostingMachine_ColInfo_11.VALUES,
    /* Cabin_T */ GradientBoostingMachine_ColInfo_12.VALUES,
    /* Cabin_U */ GradientBoostingMachine_ColInfo_13.VALUES,
    /* Pclass_1 */ GradientBoostingMachine_ColInfo_14.VALUES,
    /* Pclass_2 */ GradientBoostingMachine_ColInfo_15.VALUES,
    /* Pclass_3 */ GradientBoostingMachine_ColInfo_16.VALUES,
    /* Single */ GradientBoostingMachine_ColInfo_17.VALUES,
    /* SmallFamily */ GradientBoostingMachine_ColInfo_18.VALUES,
    /* MediumFamily */ GradientBoostingMachine_ColInfo_19.VALUES,
    /* LargeFamily */ GradientBoostingMachine_ColInfo_20.VALUES,
    /* Child */ GradientBoostingMachine_ColInfo_21.VALUES,
    /* Adult */ GradientBoostingMachine_ColInfo_22.VALUES,
    /* Eldery */ GradientBoostingMachine_ColInfo_23.VALUES,
    /* Survived */ GradientBoostingMachine_ColInfo_24.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.6081460674157303,0.39185393258426965};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.6081460674157303,0.39185393258426965};

  public GradientBoostingMachine() { super(NAMES,DOMAINS,"Survived"); }
  public String getUUID() { return Long.toString(-8203038655936408680L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    GradientBoostingMachine_Forest_0.score0(data,preds);
    GradientBoostingMachine_Forest_1.score0(data,preds);
    GradientBoostingMachine_Forest_2.score0(data,preds);
    GradientBoostingMachine_Forest_3.score0(data,preds);
    GradientBoostingMachine_Forest_4.score0(data,preds);
    GradientBoostingMachine_Forest_5.score0(data,preds);
    GradientBoostingMachine_Forest_6.score0(data,preds);
    GradientBoostingMachine_Forest_7.score0(data,preds);
    GradientBoostingMachine_Forest_8.score0(data,preds);
    GradientBoostingMachine_Forest_9.score0(data,preds);
    GradientBoostingMachine_Forest_10.score0(data,preds);
    GradientBoostingMachine_Forest_11.score0(data,preds);
    GradientBoostingMachine_Forest_12.score0(data,preds);
    GradientBoostingMachine_Forest_13.score0(data,preds);
    GradientBoostingMachine_Forest_14.score0(data,preds);
    GradientBoostingMachine_Forest_15.score0(data,preds);
    GradientBoostingMachine_Forest_16.score0(data,preds);
    GradientBoostingMachine_Forest_17.score0(data,preds);
    GradientBoostingMachine_Forest_18.score0(data,preds);
    GradientBoostingMachine_Forest_19.score0(data,preds);
    GradientBoostingMachine_Forest_20.score0(data,preds);
    GradientBoostingMachine_Forest_21.score0(data,preds);
    GradientBoostingMachine_Forest_22.score0(data,preds);
    GradientBoostingMachine_Forest_23.score0(data,preds);
    GradientBoostingMachine_Forest_24.score0(data,preds);
    GradientBoostingMachine_Forest_25.score0(data,preds);
    GradientBoostingMachine_Forest_26.score0(data,preds);
    GradientBoostingMachine_Forest_27.score0(data,preds);
    GradientBoostingMachine_Forest_28.score0(data,preds);
    GradientBoostingMachine_Forest_29.score0(data,preds);
    GradientBoostingMachine_Forest_30.score0(data,preds);
    GradientBoostingMachine_Forest_31.score0(data,preds);
    GradientBoostingMachine_Forest_32.score0(data,preds);
    GradientBoostingMachine_Forest_33.score0(data,preds);
    GradientBoostingMachine_Forest_34.score0(data,preds);
    GradientBoostingMachine_Forest_35.score0(data,preds);
    GradientBoostingMachine_Forest_36.score0(data,preds);
    GradientBoostingMachine_Forest_37.score0(data,preds);
    GradientBoostingMachine_Forest_38.score0(data,preds);
    GradientBoostingMachine_Forest_39.score0(data,preds);
    GradientBoostingMachine_Forest_40.score0(data,preds);
    GradientBoostingMachine_Forest_41.score0(data,preds);
    GradientBoostingMachine_Forest_42.score0(data,preds);
    GradientBoostingMachine_Forest_43.score0(data,preds);
    GradientBoostingMachine_Forest_44.score0(data,preds);
    GradientBoostingMachine_Forest_45.score0(data,preds);
    GradientBoostingMachine_Forest_46.score0(data,preds);
    GradientBoostingMachine_Forest_47.score0(data,preds);
    GradientBoostingMachine_Forest_48.score0(data,preds);
    GradientBoostingMachine_Forest_49.score0(data,preds);
    preds[2] = preds[1] + -0.43952594618112434;
    preds[2] = 1./(1. + Math.min(1e19, Math.exp(-(preds[2]))));
    preds[1] = 1.0-preds[2];
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.36341321440813934);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_GradientBoostingMachine implements java.io.Serializable {
  public static final String[] VALUES = new String[24];
  static {
    NamesHolder_GradientBoostingMachine_0.fill(VALUES);
  }
  static final class NamesHolder_GradientBoostingMachine_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Sex";
      sa[1] = "Fare";
      sa[2] = "Embarked_C";
      sa[3] = "Embarked_Q";
      sa[4] = "Embarked_S";
      sa[5] = "Cabin_A";
      sa[6] = "Cabin_B";
      sa[7] = "Cabin_C";
      sa[8] = "Cabin_D";
      sa[9] = "Cabin_E";
      sa[10] = "Cabin_F";
      sa[11] = "Cabin_G";
      sa[12] = "Cabin_T";
      sa[13] = "Cabin_U";
      sa[14] = "Pclass_1";
      sa[15] = "Pclass_2";
      sa[16] = "Pclass_3";
      sa[17] = "Single";
      sa[18] = "SmallFamily";
      sa[19] = "MediumFamily";
      sa[20] = "LargeFamily";
      sa[21] = "Child";
      sa[22] = "Adult";
      sa[23] = "Eldery";
    }
  }
}
// The class representing column Sex
class GradientBoostingMachine_ColInfo_0 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_0_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_0_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Embarked_C
class GradientBoostingMachine_ColInfo_2 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_2_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_2_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Embarked_Q
class GradientBoostingMachine_ColInfo_3 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_3_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_3_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Embarked_S
class GradientBoostingMachine_ColInfo_4 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_4_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_4_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_A
class GradientBoostingMachine_ColInfo_5 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_5_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_5_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_B
class GradientBoostingMachine_ColInfo_6 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_6_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_6_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_C
class GradientBoostingMachine_ColInfo_7 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_7_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_7_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_D
class GradientBoostingMachine_ColInfo_8 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_8_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_8_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_E
class GradientBoostingMachine_ColInfo_9 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_9_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_9_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_F
class GradientBoostingMachine_ColInfo_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_10_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_G
class GradientBoostingMachine_ColInfo_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_11_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_T
class GradientBoostingMachine_ColInfo_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_12_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Cabin_U
class GradientBoostingMachine_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_13_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Pclass_1
class GradientBoostingMachine_ColInfo_14 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_14_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_14_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Pclass_2
class GradientBoostingMachine_ColInfo_15 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_15_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_15_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Pclass_3
class GradientBoostingMachine_ColInfo_16 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_16_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_16_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Single
class GradientBoostingMachine_ColInfo_17 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_17_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_17_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column SmallFamily
class GradientBoostingMachine_ColInfo_18 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_18_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_18_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column MediumFamily
class GradientBoostingMachine_ColInfo_19 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_19_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_19_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column LargeFamily
class GradientBoostingMachine_ColInfo_20 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_20_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_20_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Child
class GradientBoostingMachine_ColInfo_21 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_21_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_21_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Adult
class GradientBoostingMachine_ColInfo_22 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_22_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_22_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Eldery
class GradientBoostingMachine_ColInfo_23 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_23_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_23_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}
// The class representing column Survived
class GradientBoostingMachine_ColInfo_24 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    GradientBoostingMachine_ColInfo_24_0.fill(VALUES);
  }
  static final class GradientBoostingMachine_ColInfo_24_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}

class GradientBoostingMachine_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_0_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[2])) ? 
                        -0.12820701f : 
                        -0.08050792f) : 
                    -0.049989276f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[19])) ? 
                        -0.13446051f : 
                        -0.13215485f) : 
                    0.16527614f)) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[18])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <32.020576f ? 
                     (data[1 /* Fare */] <26.016718f ? 
                        -0.08050792f : 
                        0.08240777f) : 
                    -0.08575331f) : 
                 (data[1 /* Fare */] <60.038578f ? 
                    0.14329545f : 
                     (data[1 /* Fare */] <88.30674f ? 
                        0.0034183466f : 
                        -0.011840974f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <11.441358f ? 
                        -0.001996251f : 
                        0.07851027f) : 
                    -0.11506579f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <12.007715f ? 
                    0.19302954f : 
                    0.066363044f)) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <122.078445f ? 
                    0.22722171f : 
                    0.17890054f) : 
                 (data[1 /* Fare */] <28.018003f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.007097f ? 
                        0.23311128f : 
                        0.20582874f) : 
                    0.25519714f))));
    return pred;
  } // constant pool size = 141B, number of visited nodes = 21, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_1_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[2])) ? 
                        -0.11929035f : 
                        -0.07391834f) : 
                    -0.04553466f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[19])) ? 
                        -0.12533751f : 
                        -0.12310513f) : 
                    0.14421822f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[23])) ? 
                -0.079939954f : 
                 (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[17])) ? 
                        -0.026855702f : 
                        0.05453286f) : 
                    0.12113738f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[16])) ? 
             (data[1 /* Fare */] <8.005144f ? 
                 (!Double.isNaN(data[4 /* Embarked_S */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[4])) ? 
                    0.0826431f : 
                    0.16297637f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <23.391357f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.470245f ? 
                        -0.04271634f : 
                        0.13140918f) : 
                    -0.09493148f)) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[7])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <122.078445f ? 
                    0.19668412f : 
                    0.15580484f) : 
                 (data[1 /* Fare */] <28.018003f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.007097f ? 
                        0.20164861f : 
                        0.17862192f) : 
                    0.2202411f))));
    return pred;
  } // constant pool size = 143B, number of visited nodes = 19, static init size = 390B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_2_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <52.033436f ? 
                        -0.10925851f : 
                        -0.038035605f) : 
                    -0.04147746f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[19])) ? 
                        -0.11748273f : 
                        -0.11528381f) : 
                    0.12780933f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[23])) ? 
                -0.07340561f : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <64.04115f ? 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[17])) ? 
                        0.015291297f : 
                        0.107661456f) : 
                    -0.03404629f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                     (data[1 /* Fare */] <8.035879f ? 
                        0.073106036f : 
                        -0.006097048f) : 
                    -0.10003039f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <12.007715f ? 
                    0.15107153f : 
                    0.055579558f)) : 
             (data[1 /* Fare */] <30.019289f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.986973f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.329487f ? 
                        0.16569494f : 
                        0.20047773f) : 
                     (data[1 /* Fare */] <26.122736f ? 
                        0.12560134f : 
                        0.16933143f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <148.71274f ? 
                     (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                        0.19647248f : 
                        0.20283492f) : 
                    0.16120218f))));
    return pred;
  } // constant pool size = 141B, number of visited nodes = 21, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_3_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[2])) ? 
                        -0.10499136f : 
                        -0.059194908f) : 
                    -0.037774805f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[19])) ? 
                        -0.11057617f : 
                        -0.10838354f) : 
                    0.114508085f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[23])) ? 
                -0.067481235f : 
                 (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[17])) ? 
                        -0.025333794f : 
                        0.045766f) : 
                    0.1001699f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <11.441358f ? 
                        -0.008188849f : 
                        0.062077817f) : 
                    -0.09327383f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <12.007715f ? 
                    0.13570103f : 
                    0.049567405f)) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[7])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <122.078445f ? 
                    0.15641342f : 
                    0.12101165f) : 
                 (data[1 /* Fare */] <28.018003f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.007097f ? 
                        0.1627735f : 
                        0.1443939f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                        0.17939028f : 
                        0.18210967f)))));
    return pred;
  } // constant pool size = 147B, number of visited nodes = 20, static init size = 390B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_4_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <54.03472f ? 
                     (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                        -0.096345976f : 
                        -0.038591713f) : 
                    -0.021636197f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[19])) ? 
                        -0.104391105f : 
                        -0.1021863f) : 
                    0.10339413f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <59.037933f ? 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[17])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <31.825136f ? 
                        0.02036089f : 
                        -0.04504763f) : 
                    0.09907777f) : 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
                    -0.08874482f : 
                    0.015284639f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[16])) ? 
             (data[1 /* Fare */] <8.005144f ? 
                 (!Double.isNaN(data[4 /* Embarked_S */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
                    0.065883495f : 
                    0.11694395f) : 
                 (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[4])) ? 
                     (data[1 /* Fare */] <11.370878f ? 
                        -0.09997525f : 
                        -0.006348265f) : 
                    0.05869386f)) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[7])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <122.078445f ? 
                    0.14380121f : 
                    0.10977056f) : 
                 (data[1 /* Fare */] <28.018003f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.007097f ? 
                        0.14971474f : 
                        0.1315385f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                        0.16635302f : 
                        0.16843922f)))));
    return pred;
  } // constant pool size = 146B, number of visited nodes = 21, static init size = 360B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_5_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <54.03472f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <31.238823f ? 
                        -0.0847122f : 
                        -0.14519054f) : 
                    -0.019640995f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[19])) ? 
                        -0.098763034f : 
                        -0.09653387f) : 
                    0.09388435f)) : 
             (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[22])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <64.04115f ? 
                     (data[1 /* Fare */] <26.016718f ? 
                        -0.07735771f : 
                        0.05024157f) : 
                    -0.08378906f) : 
                0.060535066f)) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (data[1 /* Fare */] <8.005144f ? 
                 (!Double.isNaN(data[4 /* Embarked_S */]) && (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                    0.058761217f : 
                    0.10694616f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <23.391357f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.470245f ? 
                        -0.041956156f : 
                        0.10526732f) : 
                    -0.0777985f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <116.14518f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <30.308472f ? 
                        0.1289769f : 
                        0.15735358f) : 
                    0.078721635f) : 
                0.16558622f)));
    return pred;
  } // constant pool size = 114B, number of visited nodes = 18, static init size = 240B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_6_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[2])) ? 
                        -0.088734314f : 
                        -0.03948473f) : 
                    -0.023013607f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[19])) ? 
                        -0.09357042f : 
                        -0.09130951f) : 
                    0.08559242f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[23])) ? 
                -0.06615021f : 
                 (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[9])) ? 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[17])) ? 
                        -0.02334171f : 
                        0.040590897f) : 
                    0.08205624f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <11.441358f ? 
                        -0.008317019f : 
                        0.05017712f) : 
                    -0.081661984f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <12.007715f ? 
                    0.1060205f : 
                    0.03615755f)) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[7])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <122.078445f ? 
                    0.12346882f : 
                    0.08904736f) : 
                 (data[1 /* Fare */] <28.018003f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <25.007097f ? 
                        0.1309f : 
                        0.1110864f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <118.826355f ? 
                        0.14813477f : 
                        0.15026511f)))));
    return pred;
  } // constant pool size = 147B, number of visited nodes = 20, static init size = 390B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_7_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <54.03472f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <31.238823f ? 
                        -0.074594036f : 
                        -0.13759173f) : 
                    -0.010809627f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[19])) ? 
                        -0.08872236f : 
                        -0.08642614f) : 
                    0.07825335f)) : 
             (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[22])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <64.04115f ? 
                     (data[1 /* Fare */] <26.016718f ? 
                        -0.071184255f : 
                        0.04369803f) : 
                    -0.0794841f) : 
                0.05613731f)) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (data[1 /* Fare */] <8.005144f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.7796106f ? 
                     (data[1 /* Fare */] <7.747435f ? 
                        0.08108607f : 
                        0.039748177f) : 
                    0.10563043f) : 
                 (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                     (data[1 /* Fare */] <11.370878f ? 
                        -0.08889899f : 
                        -0.005336876f) : 
                    0.046750776f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[7])) ? 
                    0.07884703f : 
                     (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                        0.10126065f : 
                        0.1318227f)) : 
                0.14959814f)));
    return pred;
  } // constant pool size = 128B, number of visited nodes = 19, static init size = 300B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_8_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[2])) ? 
                        -0.07969474f : 
                        -0.029617505f) : 
                    -0.013492783f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[19])) ? 
                        -0.084150515f : 
                        -0.08181853f) : 
                    0.0716803f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[23])) ? 
                -0.065346725f : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <60.038578f ? 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[17])) ? 
                        0.012497763f : 
                        0.07474731f) : 
                     (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
                        -0.068219185f : 
                        0.021731166f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <11.441358f ? 
                        -0.008444151f : 
                        0.04552736f) : 
                    -0.076050356f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <12.007715f ? 
                    0.092686646f : 
                    0.027713098f)) : 
             (data[1 /* Fare */] <30.019289f ? 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[13])) ? 
                    0.075695604f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <24.986973f ? 
                        0.12475659f : 
                        0.09260971f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <148.71274f ? 
                     (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[7])) ? 
                        0.13671365f : 
                        0.14479803f) : 
                    0.094329834f))));
    return pred;
  } // constant pool size = 156B, number of visited nodes = 21, static init size = 420B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_9_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[2])) ? 
                        -0.075195f : 
                        -0.027069166f) : 
                    -0.012212798f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[19])) ? 
                        -0.079803444f : 
                        -0.07743786f) : 
                    0.0657385f)) : 
             (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[22])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <64.04115f ? 
                     (data[1 /* Fare */] <26.016718f ? 
                        -0.066458575f : 
                        0.03598886f) : 
                    -0.071034186f) : 
                0.052711748f)) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[16])) ? 
             (data[1 /* Fare */] <8.005144f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.7796106f ? 
                     (Double.isNaN(data[3 /* Embarked_Q */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                        0.03124599f : 
                        0.067467116f) : 
                    0.09388074f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <23.391357f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.470245f ? 
                        -0.040605254f : 
                        0.08451525f) : 
                    -0.064724185f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <116.14518f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <30.308472f ? 
                        0.09846351f : 
                        0.13305119f) : 
                    0.04391011f) : 
                0.13896596f)));
    return pred;
  } // constant pool size = 128B, number of visited nodes = 19, static init size = 300B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_10_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.06493627f : 
                        -0.11358663f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.063902035f : 
                        0.08219867f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <60.210564f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <52.251057f ? 
                        -0.01258436f : 
                        0.10957214f) : 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                        -0.13834885f : 
                        -0.034225024f))) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.068751656f : 
                    -0.07909631f) : 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                    0.03598861f : 
                    0.18158816f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.037884396f : 
                     (data[1 /* Fare */] <11.370878f ? 
                        -0.07908326f : 
                        -0.0045911805f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <12.007715f ? 
                    0.082842425f : 
                    0.023725975f)) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[7])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <122.078445f ? 
                    0.09766163f : 
                    0.05639393f) : 
                 (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[9])) ? 
                    0.08229201f : 
                     (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[13])) ? 
                        0.10845845f : 
                        0.12995978f)))));
    return pred;
  } // constant pool size = 141B, number of visited nodes = 21, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_11_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.06089806f : 
                        -0.10978595f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.05952468f : 
                        0.07089342f)) : 
                 (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[15])) ? 
                    -0.12666592f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <64.00988f ? 
                        0.020352442f : 
                        -0.05367743f))) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.064783625f : 
                    -0.07507719f) : 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                    0.032757938f : 
                    0.16876942f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <11.441358f ? 
                        -0.00973376f : 
                        0.03703118f) : 
                    -0.06664561f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <12.007715f ? 
                    0.07690089f : 
                    0.021347411f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[7])) ? 
                    0.04914832f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <28.199717f ? 
                        0.09223644f : 
                        0.12558159f)) : 
                0.1313211f)));
    return pred;
  } // constant pool size = 123B, number of visited nodes = 19, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_12_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (data[1 /* Fare */] <9.005787f ? 
             (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[16])) ? 
                -0.13212599f : 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[17])) ? 
                     (data[1 /* Fare */] <7.035771f ? 
                        -0.008084915f : 
                        -0.068087764f) : 
                    -0.014131014f)) : 
             (Double.isNaN(data[5 /* Cabin_A */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                        -0.052756242f : 
                        -0.012359942f) : 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[18])) ? 
                        -0.08699841f : 
                        0.10373777f)) : 
                0.057236355f)) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.035063278f : 
                     (data[1 /* Fare */] <17.621529f ? 
                        0.010197279f : 
                        -0.06011895f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[17])) ? 
                        -0.00683874f : 
                        0.066950634f) : 
                    0.08061003f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <116.14518f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <30.308472f ? 
                        0.08181025f : 
                        0.12342677f) : 
                    0.02526924f) : 
                0.1275135f)));
    return pred;
  } // constant pool size = 129B, number of visited nodes = 18, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_13_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <54.03472f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <37.993164f ? 
                     (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[14])) ? 
                        -0.05032374f : 
                        0.03503265f) : 
                    -0.12703283f) : 
                0.013131368f) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[23])) ? 
                -0.06084869f : 
                 (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[9])) ? 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                        -0.018083127f : 
                        0.033964336f) : 
                    0.06975099f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.031568427f : 
                     (data[1 /* Fare */] <11.370878f ? 
                        -0.073566176f : 
                        -3.3655376E-4f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[17])) ? 
                        -0.006153646f : 
                        0.062153306f) : 
                    0.07357196f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                 (data[1 /* Fare */] <28.907255f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <24.880669f ? 
                        0.09289235f : 
                        0.04074383f) : 
                     (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                        0.12021078f : 
                        0.12744924f)) : 
                0.061679814f)));
    return pred;
  } // constant pool size = 129B, number of visited nodes = 18, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_14_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.050503127f : 
                        -0.104282446f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.04733607f : 
                        0.072494745f)) : 
                 (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[17])) ? 
                     (!Double.isNaN(data[14 /* Pclass_1 */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[14])) ? 
                        -0.12233934f : 
                        -0.010435253f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <33.61535f ? 
                        0.051402077f : 
                        -0.026543168f))) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.05304154f : 
                    -0.061901856f) : 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                    0.02591f : 
                    0.1526869f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <15.404971f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.444079f ? 
                        0.03275161f : 
                        -0.1131377f) : 
                     (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
                        0.0032707206f : 
                        0.13880606f)) : 
                -0.055558834f) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <122.078445f ? 
                    0.07874709f : 
                    0.0312213f) : 
                 (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                    0.05873634f : 
                     (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[21])) ? 
                        0.099246055f : 
                        0.121459626f)))));
    return pred;
  } // constant pool size = 146B, number of visited nodes = 21, static init size = 360B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_15_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.047091894f : 
                        -0.1010978f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.41487f ? 
                        -0.04387444f : 
                        0.06296172f)) : 
                 (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[22])) ? 
                    -0.07753323f : 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                        -0.037254333f : 
                        0.039605673f))) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.04965387f : 
                    -0.058403857f) : 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                    0.023540244f : 
                    0.14555661f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <11.441358f ? 
                        -0.013525848f : 
                        0.03573218f) : 
                    -0.055228893f) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[17])) ? 
                        -0.008329521f : 
                        0.05528735f) : 
                    0.067400545f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[7])) ? 
                    0.023900196f : 
                     (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[9])) ? 
                        0.055041153f : 
                        0.096964225f)) : 
                0.12163977f)));
    return pred;
  } // constant pool size = 147B, number of visited nodes = 20, static init size = 390B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_16_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (data[1 /* Fare */] <9.005787f ? 
             (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[16])) ? 
                -0.1255074f : 
                 (data[1 /* Fare */] <7.739348f ? 
                     (data[1 /* Fare */] <7.013784f ? 
                        -0.0021732466f : 
                        -0.0816937f) : 
                     (data[1 /* Fare */] <7.798441f ? 
                        -0.004095783f : 
                        -0.04727688f))) : 
             (Double.isNaN(data[5 /* Cabin_A */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[23])) ? 
                    -0.06610752f : 
                     (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[13])) ? 
                        -0.02168722f : 
                        0.013740683f)) : 
                0.051793166f)) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
             (data[1 /* Fare */] <8.005144f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.7796106f ? 
                     (Double.isNaN(data[3 /* Embarked_Q */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                        -0.0067369775f : 
                        0.04466863f) : 
                    0.06971651f) : 
                 (data[1 /* Fare */] <15.698251f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.481416f ? 
                        0.009369342f : 
                        -0.07704806f) : 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[18])) ? 
                        -0.066652074f : 
                        0.06840615f))) : 
             (data[1 /* Fare */] <30.019289f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.986973f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.329487f ? 
                        0.05661686f : 
                        0.11834681f) : 
                     (data[1 /* Fare */] <26.122736f ? 
                        -0.0043609836f : 
                        0.06529499f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <148.71274f ? 
                     (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[7])) ? 
                        0.11478368f : 
                        0.12219836f) : 
                    0.046553656f))));
    return pred;
  } // constant pool size = 135B, number of visited nodes = 22, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_17_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <52.033436f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <39.025078f ? 
                        -0.03475419f : 
                        -0.117336266f) : 
                     (data[1 /* Fare */] <66.41768f ? 
                        0.111104935f : 
                        -0.048498187f)) : 
                0.036669236f) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.04402859f : 
                    -0.053715266f) : 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[16])) ? 
                    0.023827646f : 
                    0.13912597f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.020975892f : 
                     (data[1 /* Fare */] <11.370878f ? 
                        -0.070418485f : 
                        9.4966666E-4f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[17])) ? 
                        -0.004523794f : 
                        0.04978647f) : 
                    0.06271509f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
                    0.012511175f : 
                     (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        0.045523345f : 
                        0.09091728f)) : 
                0.11833264f)));
    return pred;
  } // constant pool size = 129B, number of visited nodes = 18, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_18_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (data[1 /* Fare */] <9.005787f ? 
             (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[16])) ? 
                -0.12182343f : 
                 (!Double.isNaN(data[3 /* Embarked_Q */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                    -0.08006198f : 
                     (data[1 /* Fare */] <7.035771f ? 
                        0.037354983f : 
                        -0.041957118f))) : 
             (Double.isNaN(data[5 /* Cabin_A */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[23])) ? 
                    -0.059859227f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <64.056786f ? 
                        -0.0021453728f : 
                        -0.037969884f)) : 
                0.049264435f)) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.01891061f : 
                     (data[1 /* Fare */] <17.621529f ? 
                        0.012804577f : 
                        -0.053198434f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[17])) ? 
                        -0.004071089f : 
                        0.046061985f) : 
                    0.057379648f)) : 
             (data[1 /* Fare */] <30.019289f ? 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[13])) ? 
                    0.0136443805f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <24.986973f ? 
                        0.086146064f : 
                        0.03592543f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <148.71274f ? 
                     (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                        0.11215718f : 
                        0.119442984f) : 
                    0.036043707f))));
    return pred;
  } // constant pool size = 133B, number of visited nodes = 19, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_19_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <52.033436f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <36.179497f ? 
                        -0.029462447f : 
                        -0.11094415f) : 
                     (data[1 /* Fare */] <66.41768f ? 
                        0.0993022f : 
                        -0.041505367f)) : 
                0.034303047f) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.03970542f : 
                    -0.05032183f) : 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[16])) ? 
                    0.022545626f : 
                    0.13451193f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.01704917f : 
                     (data[1 /* Fare */] <11.370878f ? 
                        -0.06638202f : 
                        0.0037559709f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[17])) ? 
                        -0.003663747f : 
                        0.042563524f) : 
                    0.05249726f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <116.14518f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <30.308472f ? 
                        0.050125852f : 
                        0.11184446f) : 
                    -0.021770034f) : 
                0.1157403f)));
    return pred;
  } // constant pool size = 119B, number of visited nodes = 18, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_20_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (data[1 /* Fare */] <9.005787f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <7.915242f ? 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[16])) ? 
                    -0.118827224f : 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                        -0.05701735f : 
                        -0.010425201f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <8.135584f ? 
                    0.0060924753f : 
                    -0.04582377f)) : 
             (Double.isNaN(data[5 /* Cabin_A */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[23])) ? 
                    -0.05416041f : 
                     (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[14])) ? 
                        -0.017370645f : 
                        0.012645398f)) : 
                0.04682418f)) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <11.441358f ? 
                        -0.014830828f : 
                        0.02961059f) : 
                    -0.04455456f) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[17])) ? 
                        -0.0032972049f : 
                        0.039279256f) : 
                    0.04801821f)) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <122.078445f ? 
                    0.05571426f : 
                    -0.0010334259f) : 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[14])) ? 
                     (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[13])) ? 
                        0.033635367f : 
                        0.063260525f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <112.072014f ? 
                        0.11041927f : 
                        0.112272575f)))));
    return pred;
  } // constant pool size = 147B, number of visited nodes = 20, static init size = 390B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_21_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (!Double.isNaN(data[3 /* Embarked_Q */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                -0.08288233f : 
                 (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                     (Double.isNaN(data[5 /* Cabin_A */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                        -0.023139179f : 
                        0.02508578f) : 
                    0.030462388f)) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.0353326f : 
                    -0.04605659f) : 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                    0.02268524f : 
                    0.13016227f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <14.009002f ? 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[21])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.997641f ? 
                        0.018332869f : 
                        -0.009447613f) : 
                    0.078157224f) : 
                 (data[1 /* Fare */] <15.310744f ? 
                    -0.10715749f : 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[18])) ? 
                        -0.057195596f : 
                        0.0574951f))) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[7])) ? 
                    -0.00814734f : 
                     (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[9])) ? 
                        0.026464295f : 
                        0.0799991f)) : 
                0.113674134f)));
    return pred;
  } // constant pool size = 130B, number of visited nodes = 17, static init size = 360B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_22_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[3 /* Embarked_Q */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <8.005144f ? 
                -0.06654629f : 
                -0.11649515f) : 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <56.036007f ? 
                        -0.023660943f : 
                        0.010343057f) : 
                    0.027476719f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[19])) ? 
                        -0.036344726f : 
                        -0.011123205f) : 
                     (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                        0.020593092f : 
                        0.12659706f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.014343095f : 
                     (data[1 /* Fare */] <17.621529f ? 
                        0.013514113f : 
                        -0.04914263f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[17])) ? 
                        -0.0018121481f : 
                        0.034744166f) : 
                    0.044559933f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                 (data[1 /* Fare */] <28.907255f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <24.880669f ? 
                        0.06035722f : 
                        -0.009369102f) : 
                     (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[7])) ? 
                        0.10865019f : 
                        0.115896925f)) : 
                0.015693119f)));
    return pred;
  } // constant pool size = 138B, number of visited nodes = 19, static init size = 360B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_23_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (data[1 /* Fare */] <9.005787f ? 
             (data[1 /* Fare */] <7.739348f ? 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[16])) ? 
                    -0.116152234f : 
                     (data[1 /* Fare */] <7.013784f ? 
                        0.016821478f : 
                        -0.0684594f)) : 
                 (data[1 /* Fare */] <7.798441f ? 
                     (data[1 /* Fare */] <7.7625346f ? 
                        -0.038189627f : 
                        0.082075685f) : 
                     (data[1 /* Fare */] <7.911087f ? 
                        -0.07045078f : 
                        -0.005471249f))) : 
             (Double.isNaN(data[5 /* Cabin_A */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[23])) ? 
                    -0.048335087f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <64.056786f ? 
                        0.0027952932f : 
                        -0.03426994f)) : 
                0.04005618f)) : 
         (data[1 /* Fare */] <15.0096445f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <13.832f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <10.89961f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <8.759967f ? 
                        0.019777061f : 
                        -0.060567524f) : 
                    0.10568898f) : 
                -0.10457212f) : 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[4])) ? 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <127.68361f ? 
                        0.022374965f : 
                        -0.05391255f) : 
                    0.1140489f) : 
                 (data[1 /* Fare */] <26.665571f ? 
                    0.08251303f : 
                     (data[1 /* Fare */] <64.60804f ? 
                        -0.040887505f : 
                        0.11062296f)))));
    return pred;
  } // constant pool size = 112B, number of visited nodes = 20, static init size = 180B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_24_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[22])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                        -0.026580116f : 
                        -0.09485427f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <17.073471f ? 
                        0.05284562f : 
                        -0.025882563f)) : 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[17])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <74.153946f ? 
                        -0.056334056f : 
                        0.050309915f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <33.422447f ? 
                        0.08260225f : 
                        -0.0027490733f))) : 
             (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <22.014145f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.5716205f ? 
                        -0.010668004f : 
                        0.012347556f) : 
                    -0.01381471f) : 
                 (data[1 /* Fare */] <48.03086f ? 
                    0.027942268f : 
                    0.05157001f))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <8.005144f ? 
                    0.010980093f : 
                     (data[1 /* Fare */] <17.621529f ? 
                        0.012969903f : 
                        -0.04689873f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[17])) ? 
                        -0.0046930476f : 
                        0.030345019f) : 
                    0.040413883f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <152.09773f ? 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[7])) ? 
                    -0.021435993f : 
                     (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        0.014028229f : 
                        0.073030055f)) : 
                0.11184315f)));
    return pred;
  } // constant pool size = 145B, number of visited nodes = 22, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_25_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[3 /* Embarked_Q */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <8.005144f ? 
                -0.060171675f : 
                -0.114515334f) : 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <60.038578f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <52.533756f ? 
                        -0.016449684f : 
                        0.080917016f) : 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                        -0.12389729f : 
                        -0.0030934608f)) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[19])) ? 
                        -0.03425846f : 
                        -0.0053803143f) : 
                     (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                        0.017311735f : 
                        0.12333192f)))) : 
         (data[1 /* Fare */] <15.0096445f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <13.832f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <10.89961f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <8.759967f ? 
                        0.016050484f : 
                        -0.05797738f) : 
                    0.09946725f) : 
                -0.09769936f) : 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[4])) ? 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[17])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <127.68361f ? 
                        0.020288754f : 
                        -0.055559687f) : 
                    0.11220819f) : 
                 (data[1 /* Fare */] <26.665571f ? 
                    0.07491211f : 
                     (data[1 /* Fare */] <64.60804f ? 
                        -0.040550623f : 
                        0.10932252f)))));
    return pred;
  } // constant pool size = 123B, number of visited nodes = 19, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_26_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <13.211615f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <9.495848f ? 
                        -0.03596527f : 
                        0.034371793f) : 
                     (Double.isNaN(data[15 /* Pclass_2 */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                        -0.08726135f : 
                        0.001329562f)) : 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[17])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <74.153946f ? 
                        -0.053196333f : 
                        0.045032788f) : 
                     (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[13])) ? 
                        0.0020357086f : 
                        0.09393265f))) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <78.05015f ? 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[17])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <17.184786f ? 
                        -0.01345677f : 
                        0.023181058f) : 
                    0.061105307f) : 
                -0.040582642f)) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <30.019289f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <23.338457f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <20.22812f ? 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[18])) ? 
                        -0.022657275f : 
                        0.020006625f) : 
                    0.114087954f) : 
                 (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[15])) ? 
                    -0.07482531f : 
                    0.0094179595f)) : 
             (data[1 /* Fare */] <33.787334f ? 
                0.12530968f : 
                 (!Double.isNaN(data[14 /* Pclass_1 */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[14])) ? 
                    -0.068534374f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <142.20697f ? 
                        0.108841196f : 
                        0.007855048f)))));
    return pred;
  } // constant pool size = 127B, number of visited nodes = 20, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_27_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[9])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <52.033436f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <39.228333f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <29.42125f ? 
                        -0.018747732f : 
                        0.033210494f) : 
                    -0.10238987f) : 
                 (data[1 /* Fare */] <59.225555f ? 
                    0.09129134f : 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[18])) ? 
                        -0.12080924f : 
                        0.018417511f))) : 
            0.034649454f) : 
         (data[1 /* Fare */] <15.0096445f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <13.832f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <10.89961f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <8.759967f ? 
                        0.012804403f : 
                        -0.053365033f) : 
                    0.094359584f) : 
                -0.08753928f) : 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[4])) ? 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[16])) ? 
                     (data[1 /* Fare */] <22.780262f ? 
                        0.018433403f : 
                        -0.045971885f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <143.22484f ? 
                        0.06867306f : 
                        -0.031947177f)) : 
                 (data[1 /* Fare */] <26.665571f ? 
                    0.06852442f : 
                     (data[1 /* Fare */] <64.60804f ? 
                        -0.03820741f : 
                        0.10773805f)))));
    return pred;
  } // constant pool size = 95B, number of visited nodes = 17, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_28_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[2])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <60.038578f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <26.266878f ? 
                        -0.028856494f : 
                        0.022128893f) : 
                    -0.067352444f) : 
                 (data[1 /* Fare */] <20.01286f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <8.3239565f ? 
                        0.0073338747f : 
                        0.07039226f) : 
                     (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[13])) ? 
                        -0.08699186f : 
                        0.021209091f))) : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                 (data[1 /* Fare */] <28.018003f ? 
                    -0.026132934f : 
                    -0.02620841f) : 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                    0.020208217f : 
                    0.12006352f))) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <30.019289f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <23.338457f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <20.22812f ? 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[18])) ? 
                        -0.021023944f : 
                        0.016981f) : 
                    0.1044915f) : 
                 (!Double.isNaN(data[15 /* Pclass_2 */]) && (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[15])) ? 
                    -0.067785144f : 
                    0.00194837f)) : 
             (data[1 /* Fare */] <33.787334f ? 
                0.11420348f : 
                 (!Double.isNaN(data[14 /* Pclass_1 */]) && (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[14])) ? 
                    -0.06268069f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <142.20697f ? 
                        0.10742547f : 
                        0.006624106f)))));
    return pred;
  } // constant pool size = 123B, number of visited nodes = 19, static init size = 270B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_29_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[3 /* Embarked_Q */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <8.005144f ? 
                -0.05220736f : 
                -0.11259233f) : 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <60.038578f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <52.533756f ? 
                        -0.011854322f : 
                        0.060373448f) : 
                     (data[1 /* Fare */] <74.17266f ? 
                        -0.09462032f : 
                        0.005256753f)) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[19])) ? 
                        -0.0249752f : 
                        0.005492451f) : 
                     (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[16])) ? 
                        0.018331213f : 
                        0.11783451f)))) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <152.59805f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <116.4209f ? 
                 (data[1 /* Fare */] <15.318039f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <14.180097f ? 
                        0.011722629f : 
                        -0.07930871f) : 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[18])) ? 
                        -0.011330199f : 
                        0.05194957f)) : 
                -0.06966786f) : 
            0.11059677f));
    return pred;
  } // constant pool size = 97B, number of visited nodes = 15, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_30_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <78.550476f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <59.066277f ? 
                 (data[1 /* Fare */] <6.921829f ? 
                     (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[16])) ? 
                        -0.11258094f : 
                        -0.0841677f) : 
                     (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[13])) ? 
                        -0.0076531926f : 
                        0.027430722f)) : 
                -0.1084288f) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <143.75627f ? 
                0.15275124f : 
                -0.04315511f)) : 
         (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[7])) ? 
            -0.03649693f : 
             (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <36.023148f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <16.899378f ? 
                        -0.0015900397f : 
                        0.03859522f) : 
                    -0.069284506f) : 
                 (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[0])) ? 
                     (data[1 /* Fare */] <16.010288f ? 
                        -0.019940924f : 
                        0.11743911f) : 
                     (data[1 /* Fare */] <40.02572f ? 
                        0.06268405f : 
                        0.10780132f)))));
    return pred;
  } // constant pool size = 88B, number of visited nodes = 14, static init size = 180B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_31_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[3 /* Embarked_Q */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <8.005144f ? 
                -0.048384827f : 
                -0.1124679f) : 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <32.020576f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
                        -0.014123465f : 
                        0.03018727f) : 
                     (data[1 /* Fare */] <54.53504f ? 
                        -0.04090121f : 
                        -0.0017919854f)) : 
                 (data[1 /* Fare */] <16.010288f ? 
                    0.064440735f : 
                     (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[16])) ? 
                        -0.051559094f : 
                        0.09758519f)))) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <152.59805f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <116.4209f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <29.883705f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <23.37735f ? 
                        0.009878768f : 
                        -0.03992782f) : 
                     (data[1 /* Fare */] <32.48968f ? 
                        0.101468556f : 
                        0.057766996f)) : 
                -0.063138224f) : 
            0.109919615f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 14, static init size = 120B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_32_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.11147151f : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <52.033436f ? 
             (data[1 /* Fare */] <7.1139464f ? 
                 (data[1 /* Fare */] <2.5009968f ? 
                    -0.0232001f : 
                    -0.11269194f) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <36.219746f ? 
                        -0.0020400234f : 
                        -0.06340405f) : 
                     (data[1 /* Fare */] <13.426047f ? 
                        0.07399829f : 
                        0.011324781f))) : 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[7])) ? 
                 (data[1 /* Fare */] <98.78223f ? 
                    0.07908447f : 
                     (data[1 /* Fare */] <152.66618f ? 
                        -0.10046319f : 
                        -0.011116262f)) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <116.76253f ? 
                     (data[1 /* Fare */] <57.570477f ? 
                        0.057779875f : 
                        0.0025872826f) : 
                    0.14525495f))));
    return pred;
  } // constant pool size = 65B, number of visited nodes = 12, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_33_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[16])) ? 
             (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[20])) ? 
                -0.11028042f : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <28.018003f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <17.511251f ? 
                        -0.006107664f : 
                        -0.06575556f) : 
                     (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[21])) ? 
                        0.011093928f : 
                        0.045156218f))) : 
             (data[1 /* Fare */] <8.005144f ? 
                -0.11069753f : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <31.910912f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <26.223639f ? 
                        0.0033495333f : 
                        0.06690968f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <78.85088f ? 
                        -0.03393581f : 
                        0.038986094f)))) : 
         (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[7])) ? 
            -0.032439463f : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                 (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[0])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <24.01543f ? 
                        0.0060700937f : 
                        -0.032206506f) : 
                    0.063892424f) : 
                 (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[0])) ? 
                     (data[1 /* Fare */] <16.010288f ? 
                        -0.019907702f : 
                        0.11640536f) : 
                     (data[1 /* Fare */] <40.02572f ? 
                        0.054770987f : 
                        0.09332141f)))));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 17, static init size = 240B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_34_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
            -0.038774f : 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[2])) ? 
                        -0.018889409f : 
                        0.016345728f) : 
                     (data[1 /* Fare */] <40.02572f ? 
                        0.029219637f : 
                        -0.013022581f)) : 
                0.045401424f)) : 
         (data[1 /* Fare */] <11.007072f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <8.038762f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.7820168f ? 
                     (Double.isNaN(data[3 /* Embarked_Q */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                        -0.044432722f : 
                        0.017779619f) : 
                    0.04907197f) : 
                 (data[1 /* Fare */] <9.839139f ? 
                    -0.08060725f : 
                    5.3844665E-4f)) : 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[9])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <152.00392f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <112.41454f ? 
                        0.017280515f : 
                        -0.0614831f) : 
                    0.1086433f) : 
                0.133896f)));
    return pred;
  } // constant pool size = 93B, number of visited nodes = 14, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_35_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[3 /* Embarked_Q */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <8.005144f ? 
                -0.042589538f : 
                -0.11211349f) : 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <98.06301f ? 
                     (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[7])) ? 
                        -0.008233566f : 
                        0.027077403f) : 
                    -0.039010912f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[18])) ? 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[19])) ? 
                        -0.02361516f : 
                        0.01347295f) : 
                     (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                        0.014840584f : 
                        0.11407662f)))) : 
         (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[16])) ? 
             (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[4])) ? 
                 (data[1 /* Fare */] <12.007715f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <8.773955f ? 
                        -0.0019019352f : 
                        -0.072526895f) : 
                     (data[1 /* Fare */] <17.402304f ? 
                        0.07885301f : 
                        -0.047882017f)) : 
                 (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[21])) ? 
                     (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[17])) ? 
                        -0.010972761f : 
                        0.023241522f) : 
                    0.033791907f)) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <149.09581f ? 
                 (data[1 /* Fare */] <28.907255f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <24.880669f ? 
                        0.04046847f : 
                        -0.028712943f) : 
                     (Double.isNaN(data[7 /* Cabin_C */]) || !GenModel.bitSetIsInRange(32, 0, data[7]) || (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[7])) ? 
                        0.104649946f : 
                        0.11012615f)) : 
                -0.015334326f)));
    return pred;
  } // constant pool size = 142B, number of visited nodes = 20, static init size = 360B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_36_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.10894253f : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <56.036007f ? 
             (data[1 /* Fare */] <6.78561f ? 
                 (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[16])) ? 
                    -0.10974273f : 
                    -0.07005691f) : 
                 (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[23])) ? 
                    -0.046669412f : 
                     (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -6.4770086E-4f : 
                        0.051989567f))) : 
             (data[1 /* Fare */] <59.600796f ? 
                0.097326204f : 
                 (data[1 /* Fare */] <73.74856f ? 
                    -0.05767695f : 
                     (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[7])) ? 
                        -0.023072325f : 
                        0.06829612f)))));
    return pred;
  } // constant pool size = 63B, number of visited nodes = 9, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_37_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (data[1 /* Fare */] <7.723713f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <7.3013225f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.0731564f ? 
                        -0.07065642f : 
                        -0.008425904f) : 
                    -0.08091968f) : 
                 (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[22])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <17.575773f ? 
                        -0.0016981972f : 
                        -0.047836047f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <16.861856f ? 
                        0.078349575f : 
                        -0.003056725f))) : 
             (data[1 /* Fare */] <26.942434f ? 
                0.06632073f : 
                 (data[1 /* Fare */] <28.786634f ? 
                    -0.09254823f : 
                     (data[1 /* Fare */] <32.446217f ? 
                        0.06482598f : 
                        -0.012588679f)))) : 
         (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[7])) ? 
            -0.0321061f : 
             (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[18])) ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <36.023148f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <16.899378f ? 
                        -0.0042041223f : 
                        0.035212312f) : 
                    -0.06758339f) : 
                 (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[0])) ? 
                     (data[1 /* Fare */] <16.010288f ? 
                        -0.02095021f : 
                        0.11503633f) : 
                     (data[1 /* Fare */] <40.02572f ? 
                        0.047193915f : 
                        0.08234228f)))));
    return pred;
  } // constant pool size = 99B, number of visited nodes = 18, static init size = 150B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_38_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[23])) ? 
            -0.03572609f : 
             (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[9])) ? 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[14])) ? 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[2])) ? 
                        -0.015884284f : 
                        0.013780896f) : 
                     (data[1 /* Fare */] <40.02572f ? 
                        0.025641404f : 
                        -0.012734252f)) : 
                0.036625694f)) : 
         (data[1 /* Fare */] <15.0096445f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <13.832f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <10.89961f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <8.759967f ? 
                        0.0079641305f : 
                        -0.04931059f) : 
                    0.080357574f) : 
                -0.07512891f) : 
             (!Double.isNaN(data[19 /* MediumFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[19])) ? 
                -0.017036526f : 
                 (data[1 /* Fare */] <22.780262f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <18.659853f ? 
                        0.007970893f : 
                        0.09474984f) : 
                     (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[4])) ? 
                        0.004054812f : 
                        0.0801688f)))));
    return pred;
  } // constant pool size = 93B, number of visited nodes = 14, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_39_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.10791181f : 
         (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[0])) ? 
             (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[21])) ? 
                 (Double.isNaN(data[5 /* Cabin_A */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[22])) ? 
                        -0.049465403f : 
                        -0.0065823565f) : 
                    0.023459325f) : 
                 (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                    -0.008940667f : 
                     (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[16])) ? 
                        0.011515183f : 
                        0.11286206f))) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <30.019289f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <26.747046f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <15.498708f ? 
                        -0.00445655f : 
                        0.023293095f) : 
                    -0.07028577f) : 
                 (data[1 /* Fare */] <33.787334f ? 
                    0.08046713f : 
                     (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[22])) ? 
                        -0.06099663f : 
                        0.06644913f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 12, static init size = 240B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_40_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* Fare */] <224.64435f ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <148.95851f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <112.00982f ? 
                 (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[13])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <33.252914f ? 
                        -0.0015433272f : 
                        -0.03936453f) : 
                     (data[1 /* Fare */] <11.375998f ? 
                        -0.055416618f : 
                        0.018378468f)) : 
                0.08966165f) : 
            -0.07269092f) : 
        0.07976913f);
    return pred;
  } // constant pool size = 31B, number of visited nodes = 6, static init size = 30B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_41_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <27.01736f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <26.278605f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <16.013525f ? 
                     (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[17])) ? 
                        -0.009215553f : 
                        0.060351748f) : 
                     (Double.isNaN(data[15 /* Pclass_2 */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[15])) ? 
                        -0.07373363f : 
                        -0.0025542825f)) : 
                0.078212984f) : 
             (Double.isNaN(data[5 /* Cabin_A */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[16])) ? 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                        -0.048881233f : 
                        -0.012462574f) : 
                     (Double.isNaN(data[19 /* MediumFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[19]) || (GenModel.bitSetIsInRange(32, 0, data[19]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[19])) ? 
                        -0.021776954f : 
                        0.03759647f)) : 
                0.040581975f)) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <152.59805f ? 
             (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[7])) ? 
                -0.05258654f : 
                 (Double.isNaN(data[16 /* Pclass_3 */]) || !GenModel.bitSetIsInRange(32, 0, data[16]) || (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[16])) ? 
                     (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[4])) ? 
                        -0.009499419f : 
                        0.012292517f) : 
                     (!Double.isNaN(data[9 /* Cabin_E */]) && (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[9])) ? 
                        -0.047898278f : 
                        0.056052104f))) : 
            0.107698664f));
    return pred;
  } // constant pool size = 117B, number of visited nodes = 15, static init size = 330B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_42_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.10688507f : 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <56.036007f ? 
                 (!Double.isNaN(data[22 /* Adult */]) && (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[22])) ? 
                    -0.04749098f : 
                     (Double.isNaN(data[9 /* Cabin_E */]) || !GenModel.bitSetIsInRange(32, 0, data[9]) || (GenModel.bitSetIsInRange(32, 0, data[9]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[9])) ? 
                        -0.005228067f : 
                        0.038343724f)) : 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[7])) ? 
                     (!Double.isNaN(data[0 /* Sex */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[0])) ? 
                        -0.066125736f : 
                        0.043441832f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <123.76703f ? 
                        0.020670965f : 
                        0.14152731f))) : 
             (data[1 /* Fare */] <14.009002f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <9.09174f ? 
                    0.025855629f : 
                    0.057218608f) : 
                 (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[18])) ? 
                     (data[1 /* Fare */] <29.425291f ? 
                        -0.12722765f : 
                        0.030367436f) : 
                     (Double.isNaN(data[15 /* Pclass_2 */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[15])) ? 
                        0.009981239f : 
                        0.10891433f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 13, static init size = 240B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_43_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[20 /* LargeFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[20]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[20])) ? 
        -0.10619376f : 
         (Double.isNaN(data[21 /* Child */]) || !GenModel.bitSetIsInRange(32, 0, data[21]) || (GenModel.bitSetIsInRange(32, 0, data[21]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[21])) ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <56.036007f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <27.361332f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <26.07877f ? 
                        -0.0058640335f : 
                        0.06540426f) : 
                     (data[1 /* Fare */] <29.367956f ? 
                        -0.13337414f : 
                        8.9880935E-4f)) : 
                 (!Double.isNaN(data[7 /* Cabin_C */]) && (GenModel.bitSetIsInRange(32, 0, data[7]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[7])) ? 
                     (!Double.isNaN(data[0 /* Sex */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[0])) ? 
                        -0.06196213f : 
                        0.040430997f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <123.76703f ? 
                        0.018575316f : 
                        0.13061172f))) : 
             (data[1 /* Fare */] <14.009002f ? 
                 (!Double.isNaN(data[0 /* Sex */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[0])) ? 
                    0.02223963f : 
                    0.047177903f) : 
                 (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[18])) ? 
                     (data[1 /* Fare */] <29.425291f ? 
                        -0.12506403f : 
                        0.026737878f) : 
                     (Double.isNaN(data[15 /* Pclass_2 */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[15])) ? 
                        0.009011178f : 
                        0.108001694f)))));
    return pred;
  } // constant pool size = 93B, number of visited nodes = 14, static init size = 210B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_44_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[23])) ? 
         (data[1 /* Fare */] <31.019932f ? 
            -0.010471823f : 
            -0.049564343f) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <23.323582f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <15.123885f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <13.942331f ? 
                        0.002594987f : 
                        -0.09896013f) : 
                     (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[2])) ? 
                        -5.748017E-4f : 
                        0.09757809f)) : 
                 (data[1 /* Fare */] <25.75954f ? 
                    -0.072202295f : 
                     (!Double.isNaN(data[0 /* Sex */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[0])) ? 
                        -0.07137609f : 
                        0.010691338f))) : 
             (data[1 /* Fare */] <27.916376f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <26.777252f ? 
                    0.13237514f : 
                    -0.072655074f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <224.70909f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <149.5978f ? 
                        0.004508009f : 
                        -0.07422106f) : 
                    0.081570596f))));
    return pred;
  } // constant pool size = 69B, number of visited nodes = 13, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_45_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <32.020576f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <29.83167f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <26.685362f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <26.268404f ? 
                        -0.006388182f : 
                        0.06182739f) : 
                    -0.10937441f) : 
                0.081380546f) : 
             (data[1 /* Fare */] <56.411247f ? 
                 (data[1 /* Fare */] <39.284447f ? 
                    -0.010256384f : 
                     (Double.isNaN(data[18 /* SmallFamily */]) || !GenModel.bitSetIsInRange(32, 0, data[18]) || (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[18])) ? 
                        -0.12641115f : 
                        -0.01279463f)) : 
                 (data[1 /* Fare */] <63.534966f ? 
                    0.040459152f : 
                     (!Double.isNaN(data[18 /* SmallFamily */]) && (GenModel.bitSetIsInRange(32, 0, data[18]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[18])) ? 
                        -0.117427535f : 
                        0.012780899f)))) : 
         (Double.isNaN(data[4 /* Embarked_S */]) || !GenModel.bitSetIsInRange(32, 0, data[4]) || (GenModel.bitSetIsInRange(32, 0, data[4]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[4])) ? 
             (data[1 /* Fare */] <12.007715f ? 
                 (data[1 /* Fare */] <7.9190536f ? 
                    -0.032254588f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <10.151406f ? 
                        0.027860394f : 
                        -0.05203612f)) : 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <127.69947f ? 
                        0.006633056f : 
                        -0.07276956f) : 
                     (Double.isNaN(data[15 /* Pclass_2 */]) || !GenModel.bitSetIsInRange(32, 0, data[15]) || (GenModel.bitSetIsInRange(32, 0, data[15]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[15])) ? 
                        0.005841749f : 
                        0.132063f))) : 
             (data[1 /* Fare */] <17.010931f ? 
                 (!Double.isNaN(data[17 /* Single */]) && (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[17])) ? 
                    -0.033354674f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.872289f ? 
                        0.01909201f : 
                        0.060810152f)) : 
                 (Double.isNaN(data[14 /* Pclass_1 */]) || !GenModel.bitSetIsInRange(32, 0, data[14]) || (GenModel.bitSetIsInRange(32, 0, data[14]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[14])) ? 
                     (data[1 /* Fare */] <71.18636f ? 
                        -0.041608557f : 
                        0.10516618f) : 
                    0.095911846f))));
    return pred;
  } // constant pool size = 130B, number of visited nodes = 22, static init size = 240B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_46_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <78.550476f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <59.066277f ? 
                 (data[1 /* Fare */] <6.921829f ? 
                     (!Double.isNaN(data[16 /* Pclass_3 */]) && (GenModel.bitSetIsInRange(32, 0, data[16]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[16])) ? 
                        -0.10788837f : 
                        -0.06264824f) : 
                     (data[1 /* Fare */] <7.704301f ? 
                        -0.0368793f : 
                        0.0027083398f)) : 
                -0.10735583f) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <143.75627f ? 
                0.1460943f : 
                -0.044371303f)) : 
         (data[1 /* Fare */] <27.01736f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <15.497588f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <14.140367f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <8.197474f ? 
                        0.028187567f : 
                        0.07612822f) : 
                    -0.052432835f) : 
                0.11948111f) : 
             (data[1 /* Fare */] <30.808859f ? 
                -0.061126348f : 
                 (!Double.isNaN(data[13 /* Cabin_U */]) && (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[13])) ? 
                    -0.070010684f : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <90.9989f ? 
                        0.07895227f : 
                        -0.017956678f)))));
    return pred;
  } // constant pool size = 73B, number of visited nodes = 14, static init size = 90B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
}


class GradientBoostingMachine_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_47_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[23])) ? 
         (data[1 /* Fare */] <31.019932f ? 
            -0.013974199f : 
            -0.04753558f) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <26.016718f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <23.323582f ? 
                 (data[1 /* Fare */] <7.106404f ? 
                     (data[1 /* Fare */] <2.5538638f ? 
                        0.015208059f : 
                        -0.10196327f) : 
                     (Double.isNaN(data[13 /* Cabin_U */]) || !GenModel.bitSetIsInRange(32, 0, data[13]) || (GenModel.bitSetIsInRange(32, 0, data[13]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[13])) ? 
                        1.4319582E-4f : 
                        0.051368833f)) : 
                 (data[1 /* Fare */] <25.75954f ? 
                    -0.07087696f : 
                     (!Double.isNaN(data[0 /* Sex */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[0])) ? 
                        -0.06380418f : 
                        0.00995031f))) : 
             (data[1 /* Fare */] <27.916376f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <26.777252f ? 
                    0.11495697f : 
                    -0.05954252f) : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <224.70909f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <149.5978f ? 
                        0.003827919f : 
                        -0.05821974f) : 
                    0.08201805f))));
    return pred;
  } // constant pool size = 69B, number of visited nodes = 13, static init size = 90B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_48_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* Sex */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <16.010288f ? 
             (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[17])) ? 
                 (Double.isNaN(data[22 /* Adult */]) || !GenModel.bitSetIsInRange(32, 0, data[22]) || (GenModel.bitSetIsInRange(32, 0, data[22]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[22])) ? 
                     (data[1 /* Fare */] <7.0045013f ? 
                        0.0417556f : 
                        -0.013109206f) : 
                    0.062119808f) : 
                 (data[1 /* Fare */] <8.5054655f ? 
                    0.021824012f : 
                    0.07298671f)) : 
             (!Double.isNaN(data[23 /* Eldery */]) && (GenModel.bitSetIsInRange(32, 0, data[23]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[23])) ? 
                -0.05860002f : 
                 (Double.isNaN(data[17 /* Single */]) || !GenModel.bitSetIsInRange(32, 0, data[17]) || (GenModel.bitSetIsInRange(32, 0, data[17]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[17])) ? 
                     (data[1 /* Fare */] <23.765272f ? 
                        -0.07706294f : 
                        -0.015515845f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <39.275238f ? 
                        0.036548257f : 
                        -0.041484646f)))) : 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <152.59805f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <116.4209f ? 
                 (data[1 /* Fare */] <15.318039f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <14.180097f ? 
                        0.0072162636f : 
                        -0.06046103f) : 
                     (data[1 /* Fare */] <16.848616f ? 
                        0.05579414f : 
                        0.015603876f)) : 
                -0.07320876f) : 
            0.1074223f));
    return pred;
  } // constant pool size = 87B, number of visited nodes = 15, static init size = 150B
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {1, 0, 0, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
}


class GradientBoostingMachine_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += GradientBoostingMachine_Tree_49_class_0.score0(fdata);
  }
}
class GradientBoostingMachine_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2 /* Embarked_C */]) || !GenModel.bitSetIsInRange(32, 0, data[2]) || (GenModel.bitSetIsInRange(32, 0, data[2]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[2])) ? 
         (Double.isNaN(data[1]) || data[1 /* Fare */] <78.550476f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <59.066277f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <52.144447f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <31.775522f ? 
                        -0.0012212173f : 
                        -0.040150475f) : 
                    0.037224993f) : 
                -0.100319095f) : 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <143.75627f ? 
                0.13737287f : 
                -0.03596793f)) : 
         (data[1 /* Fare */] <27.01736f ? 
             (Double.isNaN(data[1]) || data[1 /* Fare */] <15.149675f ? 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <14.159091f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <7.604208f ? 
                        0.020952413f : 
                        0.060374636f) : 
                    -0.08670842f) : 
                0.08246527f) : 
             (data[1 /* Fare */] <30.808859f ? 
                -0.05677047f : 
                 (Double.isNaN(data[1]) || data[1 /* Fare */] <79.71327f ? 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <62.587513f ? 
                        0.0107747475f : 
                        0.1357969f) : 
                     (Double.isNaN(data[1]) || data[1 /* Fare */] <123.650826f ? 
                        -0.07624781f : 
                        0.04531566f)))));
    return pred;
  } // constant pool size = 63B, number of visited nodes = 14, static init size = 30B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


